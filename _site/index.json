{
  "CHANGELOG.html": {
    "href": "CHANGELOG.html",
    "title": "| Nodify-Docs",
    "keywords": "Changelog In development Breaking Changes: Features: Bugfixes: Version 6.0.0 Breaking Changes: Added a parameter for the orientation to DrawArrowGeometry, DrawDefaultArrowhead, DrawRectangleArrowhead and DrawEllipseArrowhead in BaseConnection Added source and target parameters to GetTextPosition in BaseConnection EditorGestures is now a singleton instead of a static class (can be inherited to create custom mappings) Selection gestures for ItemContainer and GroupingNode are now separated from the NodifyEditor selection gestures Renamed EditorGestures.Editor.Zoom to ZoomModifierKey Features: Added SourceOrientation and TargetOrientation to BaseConnection to support vertical connectors (vertical/mixed connection orientation) Added DirectionalArrowsCount to BaseConnection to allow drawing multipe arrows on a connection flowing in the connection direction Added DrawDirectionalArrowsGeometry and DrawDirectionalArrowheadGeometry to BaseConnection to allow customizing the directional arrows Improved EditorGestures to allow changing input gestures at runtime Added new gesture types: AnyGesture, AllGestures, and InputGestureRef Added Orientation dependency property to NodeInput and NodeOutput Added DirectionalArrowsOffset dependency property to BaseConnection Added StartAnimation and StopAnimation methods to BaseConnection Bugfixes: Fixed BaseConnection.Text not always displaying in the center of the connection Fixed a bug where the item container would incorrectly transition to the dragging state on mouse over Version 5.2.0 Features: Added Text to BaseConnection, allowing displaying of text on connections Added Foreground, FontSize, FontWeight, FontStyle, FontStretch and FontFamily to BaseConnection, allowing styling the displaying text Bugfixes: Fixed MouseCapture not being released when EnableStickyConnections is enabled and the PendingConnection is canceled by a key gesture Version 5.1.0 Features: Added ItemContainer.SelectedBorderThickness dependency property Added NodifyEditor.GetLocationInsideEditor Bugfixes: Fixed PendingConnection.PreviewTarget not being set to null when there is no actual target Fixed PendingConnection.PreviewTarget not being set on Connector.PendingConnectionStartedEvent Fixed PendingConnection.PreviewTarget not being set to null on Connector.PendingConnectionCompletedEvent Fixed connectors panel not being affected by Node.VerticalAlignment Changing BorderThickness causes layout shift when selecting an item container Fixed the unintentional movement caused by snapping correction Version 5.0.2 Bugfixes: Fixed NodeOutput content horizontal alignment Fixed Connector not opening Context Menu Version 5.0.1 Bugfixes: Returning false from PendingConnection.StartedCommand.CanExecute does not stop the creation of a pending connection BaseConnection.ArrowEnds does not display correctly when BaseConnection.Direction is ConnectionDirection.Backward Version 5.0.0 Breaking Changes: Removed BaseConnection.GetArrowHeadPoints Removed BaseConnection.OffsetMode Changed return type of BaseConnection.DrawLineGeometry to support both arrowheads no matter the number of points on the line Changed the default for BaseConnection.SourceOffset and BaseConnection.TargetOffset from Size(0, 0) to Size(14, 0) Changed the default for BaseConnection.ArrowSize from Size(7, 6) to Size(8, 8) Features: Added BaseConnection.SourceOffsetMode and BaseConnection.TargetOffsetMode Added BaseConnection.ArrowEnds dependency property to allow configurable arrowhead ends Added BaseConnection.ArrowShape dependency property to allow configurable arrowhead shape Added NodifyEditor.EnableDraggingContainersOptimizations to allow receiving ItemContainer.Location updates in realtime Added ConnectionOffsetMode.Static to allow offsetting the source and target points of the connection on the X and the Y axis without revolving around the source or target points Version 4.1.0 Features: Added EditorGestures.Selection.DefaultMouseAction to make it easier to change between mouse buttons for selection Added EditorGestures.Selection.Cancel gesture to cancel the selection operation reverting to the previous selection Added ItemsSelectStartedCommand and ItemsSelectCompletedCommand dependency properties to NodifyEditor for better undo/redo support Bugfixes: Fixed NodifyEditor.SelectedItems being empty after selection is completed Fixed drag canceling when Drag and CancelAction are bound to the same gesture Version 4.0.1 Bugfixes: Fixed DisablePanning not working anymore Version 4.0.0 Breaking Changes: Removed Selection field from NodifyEditor Removed InitialMousePosition, CurrentMousePosition, PreviousMousePosition fields from NodifyEditor Removed ItemContainer.DraggableHost (use Editor.ItemsHost instead) Made SelectionType required in SelectionHelper Moved GroupingNode.SwitchMovementModeModifierKey to EditorGestures.GroupingNode Pending connections are now restricted to connect only to Connectors or to NodifyEditors and ItemContainers if PendingConnection.AllowOnlyConnectors is false Features: Added Connector.EnableStickyConnections to allow completing pending connections in two steps Added editor states which can be overriden by inheriting from NodifyEditor and implementing NodifyEditor.GetInitialState() EditorState - base class for all editor states EditorDefaultState EditorSelectingState EditorPanningState Added container states which can be overriden by inheriting from ItemContainer and implementing ItemContainer.GetInitialState() ContainerState - base class for all container states ContainerDefaultState ContainerDraggingState Added MultiGesture utility that can combine multiple input gestures into one gesture Added configurable input gestures for NodifyEditor, ItemContainer, Connector, BaseConnection and GroupingNode to EditorGestures Added State, PushState, PopState and PopAllStates to NodifyEditor and ItemContainer Changed the default AutoPanSpeed to 15 from 10 pixels per tick Allow setting ItemContainer.IsPreviewingLocation from derived classes Bugfixes: Fixed HandleRightClickAfterPanningThreshold not working as expected Fixed DisablePanning not disabling auto panning in certain situations Fixed GroupingNode selection not working with multiple selection modes Fixed PendingConnection connecting cross editors Version 3.0.0 Breaking Changes: Changed Decorators from UIElement collection to IEnumerable Features: Added ItemsExtent and DecoratorsExtent dependency properties to NodifyEditor Added DecoratorTemplate dependency property to NodifyEditor Added FitToScreenExtentMargin static field to NodifyEditor Added Extent dependency property to NodifyCanvas Bugfixes: Selection rectangle and Decorators are no longer scaled with the viewport zoom Fixed connector anchor not updating when container size changed Version 2.0.1 Bugfixes: Fixed pending connection default style Version 2.0.0 Breaking Changes: Renamed Offset to ViewportLocation in NodifyEditor Renamed Scale to ViewportZoom in NodifyEditor Renamed MinScale to MinViewportZoom in NodifyEditor Renamed MaxScale to MaxViewportZoom in NodifyEditor Renamed AppliedTransform to ViewportTransform in NodifyEditor Renamed DirectionalConnection to LineConnection Removed BringIntoViewAnimationDuration from NodifyEditor Removed Viewport dependency property from NodifyEditor Removed ActualSize dependency property from StateNode Removed Icon dependency property from Node as the icon can (and should) be added in the HeaderTemplate if necessary PART_ItemsHost is now required for NodifyEditor to work ItemContainers cannot be used outside a NodifyEditor anymore ZoomAtPosition now requires graph space coordinates instead of screen space coordinates Removed custom value converters Made DependencyObjectExtensions internal Removed the http://miroiu.github.io/winfx/xaml/nodify xaml prefix Features: Added ResizeStartedEvent routed event to GroupingNode Added ViewportSize - OneWayToSource dependency property to NodifyEditor Added ActualSize - OneWayToSource dependency property to ItemContainer Added DecoratorContainer and DecoratorContainerStyle dependency properties to NodifyEditor Added RemoveConnectionCommand command to NodifyEditor Added DisconnectCommand and SplitCommand commands to BaseConnection Added ContentBrush dependency property to NodifyEditor Added HasFooter dependency property to Node Added FitToScreen command to NodifyEditor and EditorCommands Added onFinish callback to BringIntoView in NodifyEditor Added ArrowSize and Spacing dependency properties to all connections inheriting from BaseConnection Added BringIntoViewMaxDuration dependency property to NodifyEditor Added BringIntoViewSpeed dependency property to NodifyEditor Auto panning speed now scales with the zoom factor Bugfixes: Every public property or method should work with graph space coordinates Disable auto panning when panning is disabled Min zoom could be set to a very small value Bring into view was not disabling all interfering operations"
  },
  "CODE_OF_CONDUCT.html": {
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct | Nodify-Docs",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at miroiu.emanuel@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq"
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "👋 Welcome to Nodify! 👋 | Nodify-Docs",
    "keywords": "👋 Welcome to Nodify! 👋 👍🎉 First off, thanks for taking the time to contribute! Your contributions help make Nodify better for everyone. 👍🎉 If you find Nodify useful, please consider giving us a ⭐ star ⭐ on our GitHub repository! Code of Conduct: By contributing to Nodify, you agree to uphold our Code of Conduct. We expect all contributors to be respectful and inclusive. (Don't worry, it's all common sense 😎) How you can contribute ❓ Ask a question - If you're unsure about anything related to Nodify, feel free to ask! No question is too small. 🐛 Create a bug report - Noticed something not working as expected? Let us know by creating a bug report. Please provide as much detail as possible to help us address the issue. 🌺 Suggest an enhancement - Have an idea to make Nodify even better? We'd love to hear it! Share your suggestions for new features or improvements. ✨ Explore example applications - Check out the example applications provided with Nodify. They're great for learning how to use the library in different scenarios. 🎉 Showcase your application - Built something cool with Nodify? Share it with the community! We'd love to see what you've created. 📝 Help with the documentation - Documentation is crucial for making Nodify accessible to everyone. If you spot errors or have suggestions for improvement, please let us know or update the docs yourself! 🔧 Fix a bug - If you're a developer, you can contribute by fixing bugs in Nodify. Simply locate an open issue tagged as a bug and submit a pull request with your fix. 🔗 Create a pull request linking to a feature - Implemented a new feature or enhancement? Fantastic! Submit a pull request linking to the relevant feature or enhancement issue. Some tips Write clear and descriptive issues and try to avoid duplication If you find a Closed issue that relates to yours, open a new issue and include a link to the original issue in the body of your new one. The easiest way to update documentation is to navigate to the docs website and click 'Edit this page' which is found at the top right of any page. If you want to create an example application that others can use to learn from, then create an issue describing what your application is doing and if you need help with anything. The application you showcase can use any license."
  },
  "PULL_REQUEST_TEMPLATE.html": {
    "href": "PULL_REQUEST_TEMPLATE.html",
    "title": "| Nodify-Docs",
    "keywords": "📝 Description of the Change What is this pull request about? 🐛 Possible Drawbacks Are there any possible side-effects or negative impacts with this code change?"
  },
  "README.html": {
    "href": "README.html",
    "title": "Nodify | Nodify-Docs",
    "keywords": "Nodify A collection of highly performant controls for node based editors designed for MVVM. Tip There is now a fantastic Avalonia port available! You can check it out here. Huge thanks to BAndysc who made this possible! 🚀 Examples of node-based applications 🎨 A playground application where you can try all the available settings. Examples/Nodify.Playground 🌓 A state machine where each state represents an executable action, and each transition represents a condition for the next action to execute. Examples/Nodify.StateMachine 💻 A simple \"real-time\" calculator where each node represents an operation that takes input and feeds its output into other nodes input. Examples/Nodify.Calculator 📥 Installation Use the nuget package manager to install Nodify. Install-Package Nodify ⭐️ Features Designed from the start to work with MVVM No dependencies other than WPF Optimized for interactions with hundreds of nodes at once Built-in dark and light themes Selecting, zooming, panning with auto panning when close to edge Select, move and connect nodes Lots of configurable dependency properties Ready for undo/redo Example applications: 🎨 Playground, 🌓 State machine, 💻 Calculator 📝 Documentation Check out the wiki and the changelog in github. ❤️ Contributing Helping with documentation, bug reports, pull requests or anything else is very welcome."
  },
  "api/Nodify.AllGestures.html": {
    "href": "api/Nodify.AllGestures.html",
    "title": "Class AllGestures | Nodify-Docs",
    "keywords": "Class AllGestures All gestures must match. Inheritance object InputGesture MultiGesture AllGestures Inherited Members MultiGesture.None MultiGesture.Matches(object, InputEventArgs) Namespace: Nodify Assembly: Nodify.dll Syntax public sealed class AllGestures : MultiGesture Constructors | Edit this page View Source AllGestures(params InputGesture[]) Declaration public AllGestures(params InputGesture[] gestures) Parameters Type Name Description InputGesture[] gestures"
  },
  "api/Nodify.AnyGesture.html": {
    "href": "api/Nodify.AnyGesture.html",
    "title": "Class AnyGesture | Nodify-Docs",
    "keywords": "Class AnyGesture At least one gesture must match. Inheritance object InputGesture MultiGesture AnyGesture Inherited Members MultiGesture.None MultiGesture.Matches(object, InputEventArgs) Namespace: Nodify Assembly: Nodify.dll Syntax public sealed class AnyGesture : MultiGesture Constructors | Edit this page View Source AnyGesture(params InputGesture[]) Declaration public AnyGesture(params InputGesture[] gestures) Parameters Type Name Description InputGesture[] gestures"
  },
  "api/Nodify.ArrowHeadEnds.html": {
    "href": "api/Nodify.ArrowHeadEnds.html",
    "title": "Enum ArrowHeadEnds | Nodify-Docs",
    "keywords": "Enum ArrowHeadEnds The end at which the arrow head is drawn. Namespace: Nodify Assembly: Nodify.dll Syntax public enum ArrowHeadEnds Fields Name Description Both Arrow heads at both ends. End Arrow head at end. None No arrow head. Start Arrow head at start."
  },
  "api/Nodify.ArrowHeadShape.html": {
    "href": "api/Nodify.ArrowHeadShape.html",
    "title": "Enum ArrowHeadShape | Nodify-Docs",
    "keywords": "Enum ArrowHeadShape The shape of the arrowhead. Namespace: Nodify Assembly: Nodify.dll Syntax public enum ArrowHeadShape Fields Name Description Arrowhead The default arrowhead. Ellipse An ellipse. Rectangle A rectangle."
  },
  "api/Nodify.BaseConnection.html": {
    "href": "api/Nodify.BaseConnection.html",
    "title": "Class BaseConnection | Nodify-Docs",
    "keywords": "Class BaseConnection Represents the base class for shapes that are drawn from a Source point to a Target point. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Shape BaseConnection Connection LineConnection Namespace: Nodify Assembly: Nodify.dll Syntax public abstract class BaseConnection : Shape Fields | Edit this page View Source ArrowEndsProperty Declaration public static readonly DependencyProperty ArrowEndsProperty Field Value Type Description DependencyProperty | Edit this page View Source ArrowShapeProperty Declaration public static readonly DependencyProperty ArrowShapeProperty Field Value Type Description DependencyProperty | Edit this page View Source ArrowSizeProperty Declaration public static readonly DependencyProperty ArrowSizeProperty Field Value Type Description DependencyProperty | Edit this page View Source DirectionProperty Declaration public static readonly DependencyProperty DirectionProperty Field Value Type Description DependencyProperty | Edit this page View Source DirectionalArrowsCountProperty Declaration public static readonly DependencyProperty DirectionalArrowsCountProperty Field Value Type Description DependencyProperty | Edit this page View Source DirectionalArrowsOffsetProperty Declaration public static readonly DependencyProperty DirectionalArrowsOffsetProperty Field Value Type Description DependencyProperty | Edit this page View Source DisconnectCommandProperty Declaration public static readonly DependencyProperty DisconnectCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source DisconnectEvent Declaration public static readonly RoutedEvent DisconnectEvent Field Value Type Description RoutedEvent | Edit this page View Source FontFamilyProperty Declaration public static readonly DependencyProperty FontFamilyProperty Field Value Type Description DependencyProperty | Edit this page View Source FontSizeProperty Declaration public static readonly DependencyProperty FontSizeProperty Field Value Type Description DependencyProperty | Edit this page View Source FontStretchProperty Declaration public static readonly DependencyProperty FontStretchProperty Field Value Type Description DependencyProperty | Edit this page View Source FontStyleProperty Declaration public static readonly DependencyProperty FontStyleProperty Field Value Type Description DependencyProperty | Edit this page View Source FontWeightProperty Declaration public static readonly DependencyProperty FontWeightProperty Field Value Type Description DependencyProperty | Edit this page View Source ForegroundProperty Declaration public static readonly DependencyProperty ForegroundProperty Field Value Type Description DependencyProperty | Edit this page View Source SourceOffsetModeProperty Declaration public static readonly DependencyProperty SourceOffsetModeProperty Field Value Type Description DependencyProperty | Edit this page View Source SourceOffsetProperty Declaration public static readonly DependencyProperty SourceOffsetProperty Field Value Type Description DependencyProperty | Edit this page View Source SourceOrientationProperty Declaration public static readonly DependencyProperty SourceOrientationProperty Field Value Type Description DependencyProperty | Edit this page View Source SourceProperty Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty | Edit this page View Source SpacingProperty Declaration public static readonly DependencyProperty SpacingProperty Field Value Type Description DependencyProperty | Edit this page View Source SplitCommandProperty Declaration public static readonly DependencyProperty SplitCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source SplitEvent Declaration public static readonly RoutedEvent SplitEvent Field Value Type Description RoutedEvent | Edit this page View Source TargetOffsetModeProperty Declaration public static readonly DependencyProperty TargetOffsetModeProperty Field Value Type Description DependencyProperty | Edit this page View Source TargetOffsetProperty Declaration public static readonly DependencyProperty TargetOffsetProperty Field Value Type Description DependencyProperty | Edit this page View Source TargetOrientationProperty Declaration public static readonly DependencyProperty TargetOrientationProperty Field Value Type Description DependencyProperty | Edit this page View Source TargetProperty Declaration public static readonly DependencyProperty TargetProperty Field Value Type Description DependencyProperty | Edit this page View Source TextProperty Declaration public static readonly DependencyProperty TextProperty Field Value Type Description DependencyProperty | Edit this page View Source ZeroVector Gets a vector that has its coordinates set to 0. Declaration protected static readonly Vector ZeroVector Field Value Type Description Vector Properties | Edit this page View Source ArrowEnds Gets or sets the arrowhead ends. Declaration public ArrowHeadEnds ArrowEnds { get; set; } Property Value Type Description ArrowHeadEnds | Edit this page View Source ArrowShape Gets or sets the arrowhead ends. Declaration public ArrowHeadShape ArrowShape { get; set; } Property Value Type Description ArrowHeadShape | Edit this page View Source ArrowSize Gets or sets the size of the arrow head. Declaration public Size ArrowSize { get; set; } Property Value Type Description Size | Edit this page View Source DefiningGeometry Gets a value that represents the Geometry of the Shape. Declaration protected override Geometry DefiningGeometry { get; } Property Value Type Description Geometry The Geometry of the Shape. Overrides Shape.DefiningGeometry | Edit this page View Source Direction Gets or sets the direction in which this connection is flowing. Declaration public ConnectionDirection Direction { get; set; } Property Value Type Description ConnectionDirection | Edit this page View Source DirectionalArrowsCount Gets or sets the number of arrows to be drawn on the line in the direction of the connection (see Direction). Declaration public uint DirectionalArrowsCount { get; set; } Property Value Type Description uint | Edit this page View Source DirectionalArrowsOffset Gets or sets the offset of the arrows drawn by the DirectionalArrowsCount (value is clamped between 0 and 1). Declaration public double DirectionalArrowsOffset { get; set; } Property Value Type Description double | Edit this page View Source DisconnectCommand Removes this connection. Triggered by EditorGestures.Connection.Disconnect gesture. Parameter is the location where the disconnect ocurred. Declaration public ICommand? DisconnectCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source FontFamily Gets or sets the preferred top-level font family for the content of the element. Declaration public FontFamily FontFamily { get; set; } Property Value Type Description FontFamily The preferred font family or a primary preferred font family with one or more fallback font families. The default is the font determined by the MessageFontFamily value. | Edit this page View Source FontSize Gets or sets the font size for the content of the element. Declaration [TypeConverter(typeof(FontSizeConverter))] public double FontSize { get; set; } Property Value Type Description double The desired font size to use in device independent pixels, greater than 0.001 and less than or equal to 35791. The default depends on current system settings and depends on the MessageFontSize value. Exceptions Type Condition ArgumentException FontSize is set to a value greater than 35791 or less than or equal to 0.001. | Edit this page View Source FontStretch Gets or sets the font-stretching characteristics for the content of the element. Declaration public FontStretch FontStretch { get; set; } Property Value Type Description FontStretch The desired font-stretching characteristics to use. The default is Normal. | Edit this page View Source FontStyle Gets or sets the font style for the content of the element. Declaration public FontStyle FontStyle { get; set; } Property Value Type Description FontStyle The desired font style. The default is determined by the MessageFontStyle value. | Edit this page View Source FontWeight Gets or sets the top-level font weight for the content of the element. Declaration public FontWeight FontWeight { get; set; } Property Value Type Description FontWeight The desired font weight. The default value is determined by the MessageFontWeight value. | Edit this page View Source Foreground The brush used to render the Text. Declaration public Brush? Foreground { get; set; } Property Value Type Description Brush | Edit this page View Source Source Gets or sets the start point of this connection. Declaration public Point Source { get; set; } Property Value Type Description Point | Edit this page View Source SourceOffset Gets or sets the offset from the Source point. Declaration public Size SourceOffset { get; set; } Property Value Type Description Size | Edit this page View Source SourceOffsetMode Gets or sets the ConnectionOffsetMode to apply to the Source when drawing the connection. Declaration public ConnectionOffsetMode SourceOffsetMode { get; set; } Property Value Type Description ConnectionOffsetMode | Edit this page View Source SourceOrientation Gets or sets the orientation in which this connection is flowing. Declaration public Orientation SourceOrientation { get; set; } Property Value Type Description Orientation | Edit this page View Source Spacing The distance between the start point and the where the angle breaks. Declaration public double Spacing { get; set; } Property Value Type Description double | Edit this page View Source SplitCommand Splits the connection. Triggered by EditorGestures.Connection.Split gesture. Parameter is the location where the splitting ocurred. Declaration public ICommand? SplitCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source Target Gets or sets the end point of this connection. Declaration public Point Target { get; set; } Property Value Type Description Point | Edit this page View Source TargetOffset Gets or sets the offset from the Target point. Declaration public Size TargetOffset { get; set; } Property Value Type Description Size | Edit this page View Source TargetOffsetMode Gets or sets the ConnectionOffsetMode to apply to the Target when drawing the connection. Declaration public ConnectionOffsetMode TargetOffsetMode { get; set; } Property Value Type Description ConnectionOffsetMode | Edit this page View Source TargetOrientation Gets or sets the orientation in which this connection is flowing. Declaration public Orientation TargetOrientation { get; set; } Property Value Type Description Orientation | Edit this page View Source Text Gets or sets the text contents of the BaseConnection. Declaration public string? Text { get; set; } Property Value Type Description string Methods | Edit this page View Source DrawArrowGeometry(StreamGeometryContext, Point, Point, ConnectionDirection, ArrowHeadShape, Orientation) Declaration protected virtual void DrawArrowGeometry(StreamGeometryContext context, Point source, Point target, ConnectionDirection arrowDirection = ConnectionDirection.Forward, ArrowHeadShape shape = ArrowHeadShape.Arrowhead, Orientation orientation = Orientation.Horizontal) Parameters Type Name Description StreamGeometryContext context Point source Point target ConnectionDirection arrowDirection ArrowHeadShape shape Orientation orientation | Edit this page View Source DrawDefaultArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) Declaration protected virtual void DrawDefaultArrowhead(StreamGeometryContext context, Point source, Point target, ConnectionDirection arrowDirection = ConnectionDirection.Forward, Orientation orientation = Orientation.Horizontal) Parameters Type Name Description StreamGeometryContext context Point source Point target ConnectionDirection arrowDirection Orientation orientation | Edit this page View Source DrawDirectionalArrowheadGeometry(StreamGeometryContext, Vector, Point) Declaration protected virtual void DrawDirectionalArrowheadGeometry(StreamGeometryContext context, Vector direction, Point location) Parameters Type Name Description StreamGeometryContext context Vector direction Point location | Edit this page View Source DrawDirectionalArrowsGeometry(StreamGeometryContext, Point, Point) Declaration protected virtual void DrawDirectionalArrowsGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target | Edit this page View Source DrawEllipseArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) Declaration protected virtual void DrawEllipseArrowhead(StreamGeometryContext context, Point source, Point target, ConnectionDirection arrowDirection = ConnectionDirection.Forward, Orientation orientation = Orientation.Horizontal) Parameters Type Name Description StreamGeometryContext context Point source Point target ConnectionDirection arrowDirection Orientation orientation | Edit this page View Source DrawLineGeometry(StreamGeometryContext, Point, Point) Declaration protected abstract ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) DrawLineGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target Returns Type Description ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) | Edit this page View Source DrawRectangleArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) Declaration protected virtual void DrawRectangleArrowhead(StreamGeometryContext context, Point source, Point target, ConnectionDirection arrowDirection = ConnectionDirection.Forward, Orientation orientation = Orientation.Horizontal) Parameters Type Name Description StreamGeometryContext context Point source Point target ConnectionDirection arrowDirection Orientation orientation | Edit this page View Source GetOffset() Gets the resulting offset after applying the SourceOffsetMode. Declaration protected virtual (Vector SourceOffset, Vector TargetOffset) GetOffset() Returns Type Description (Vector SourceOffset, Vector TargetOffset) | Edit this page View Source GetTextPosition(FormattedText, Point, Point) Declaration protected virtual Point GetTextPosition(FormattedText text, Point source, Point target) Parameters Type Name Description FormattedText text Point source Point target Returns Type Description Point | Edit this page View Source OnMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides UIElement.OnMouseDown(MouseButtonEventArgs) | Edit this page View Source OnMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. Overrides UIElement.OnMouseUp(MouseButtonEventArgs) | Edit this page View Source OnRender(DrawingContext) Provides a means to change the default appearance of a Shape element. Declaration protected override void OnRender(DrawingContext drawingContext) Parameters Type Name Description DrawingContext drawingContext A DrawingContext object that is drawn during the rendering pass of this Shape. Overrides Shape.OnRender(DrawingContext) | Edit this page View Source StartAnimation(double) Starts animating the directional arrows. Declaration public void StartAnimation(double duration = 1.5) Parameters Type Name Description double duration The duration for moving an arrowhead from Source to Target. | Edit this page View Source StopAnimation() Stops the animation started by StartAnimation(double) Declaration public void StopAnimation() Events | Edit this page View Source Disconnect Triggered by the EditorGestures.Connection.Disconnect gesture. Declaration public event ConnectionEventHandler Disconnect Event Type Type Description ConnectionEventHandler | Edit this page View Source Split Triggered by the EditorGestures.Connection.Split gesture. Declaration public event ConnectionEventHandler Split Event Type Type Description ConnectionEventHandler"
  },
  "api/Nodify.BoxValue.html": {
    "href": "api/Nodify.BoxValue.html",
    "title": "Class BoxValue | Nodify-Docs",
    "keywords": "Class BoxValue Inheritance object BoxValue Namespace: Nodify Assembly: Nodify.dll Syntax public static class BoxValue Fields | Edit this page View Source ArrowSize Declaration public static readonly object ArrowSize Field Value Type Description object | Edit this page View Source ConnectionOffset Declaration public static readonly object ConnectionOffset Field Value Type Description object | Edit this page View Source Double0 Declaration public static readonly object Double0 Field Value Type Description object | Edit this page View Source Double1 Declaration public static readonly object Double1 Field Value Type Description object | Edit this page View Source Double1000 Declaration public static readonly object Double1000 Field Value Type Description object | Edit this page View Source Double2 Declaration public static readonly object Double2 Field Value Type Description object | Edit this page View Source Double45 Declaration public static readonly object Double45 Field Value Type Description object | Edit this page View Source DoubleHalf Declaration public static readonly object DoubleHalf Field Value Type Description object | Edit this page View Source False Declaration public static readonly object False Field Value Type Description object | Edit this page View Source Int0 Declaration public static readonly object Int0 Field Value Type Description object | Edit this page View Source Int1 Declaration public static readonly object Int1 Field Value Type Description object | Edit this page View Source Point Declaration public static readonly object Point Field Value Type Description object | Edit this page View Source Rect Declaration public static readonly object Rect Field Value Type Description object | Edit this page View Source Size Declaration public static readonly object Size Field Value Type Description object | Edit this page View Source Thickness2 Declaration public static readonly object Thickness2 Field Value Type Description object | Edit this page View Source True Declaration public static readonly object True Field Value Type Description object | Edit this page View Source UInt0 Declaration public static readonly object UInt0 Field Value Type Description object | Edit this page View Source UInt1 Declaration public static readonly object UInt1 Field Value Type Description object"
  },
  "api/Nodify.CircuitConnection.html": {
    "href": "api/Nodify.CircuitConnection.html",
    "title": "Class CircuitConnection | Nodify-Docs",
    "keywords": "Class CircuitConnection Represents a line that is controlled by an angle. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Shape BaseConnection LineConnection CircuitConnection Inherited Members LineConnection.DrawDefaultArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) LineConnection.InterpolateLineSegment(Point, Point, double) BaseConnection.SourceProperty BaseConnection.TargetProperty BaseConnection.SourceOffsetProperty BaseConnection.TargetOffsetProperty BaseConnection.SourceOffsetModeProperty BaseConnection.TargetOffsetModeProperty BaseConnection.SourceOrientationProperty BaseConnection.TargetOrientationProperty BaseConnection.DirectionProperty BaseConnection.DirectionalArrowsCountProperty BaseConnection.DirectionalArrowsOffsetProperty BaseConnection.SpacingProperty BaseConnection.ArrowSizeProperty BaseConnection.ArrowEndsProperty BaseConnection.ArrowShapeProperty BaseConnection.SplitCommandProperty BaseConnection.DisconnectCommandProperty BaseConnection.ForegroundProperty BaseConnection.TextProperty BaseConnection.FontSizeProperty BaseConnection.FontFamilyProperty BaseConnection.FontWeightProperty BaseConnection.FontStyleProperty BaseConnection.FontStretchProperty BaseConnection.Source BaseConnection.Target BaseConnection.SourceOffset BaseConnection.TargetOffset BaseConnection.SourceOffsetMode BaseConnection.TargetOffsetMode BaseConnection.SourceOrientation BaseConnection.TargetOrientation BaseConnection.Direction BaseConnection.DirectionalArrowsCount BaseConnection.DirectionalArrowsOffset BaseConnection.ArrowEnds BaseConnection.ArrowShape BaseConnection.Spacing BaseConnection.ArrowSize BaseConnection.SplitCommand BaseConnection.DisconnectCommand BaseConnection.Foreground BaseConnection.Text BaseConnection.FontSize BaseConnection.FontFamily BaseConnection.FontStyle BaseConnection.FontWeight BaseConnection.FontStretch BaseConnection.DisconnectEvent BaseConnection.SplitEvent BaseConnection.Disconnect BaseConnection.Split BaseConnection.ZeroVector BaseConnection.DefiningGeometry BaseConnection.DrawDirectionalArrowheadGeometry(StreamGeometryContext, Vector, Point) BaseConnection.DrawArrowGeometry(StreamGeometryContext, Point, Point, ConnectionDirection, ArrowHeadShape, Orientation) BaseConnection.DrawRectangleArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) BaseConnection.DrawEllipseArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) BaseConnection.GetOffset() BaseConnection.StartAnimation(double) BaseConnection.StopAnimation() BaseConnection.OnMouseDown(MouseButtonEventArgs) BaseConnection.OnMouseUp(MouseButtonEventArgs) BaseConnection.OnRender(DrawingContext) Namespace: Nodify Assembly: Nodify.dll Syntax public class CircuitConnection : LineConnection Fields | Edit this page View Source AngleProperty Declaration public static readonly DependencyProperty AngleProperty Field Value Type Description DependencyProperty | Edit this page View Source Degrees Declaration protected const double Degrees = 0.017453292519943295 Field Value Type Description double Properties | Edit this page View Source Angle The angle of the connection in degrees. Declaration public double Angle { get; set; } Property Value Type Description double Methods | Edit this page View Source DrawDirectionalArrowsGeometry(StreamGeometryContext, Point, Point) Declaration protected override void DrawDirectionalArrowsGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target Overrides LineConnection.DrawDirectionalArrowsGeometry(StreamGeometryContext, Point, Point) | Edit this page View Source DrawLineGeometry(StreamGeometryContext, Point, Point) Declaration protected override ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) DrawLineGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target Returns Type Description ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) Overrides LineConnection.DrawLineGeometry(StreamGeometryContext, Point, Point) | Edit this page View Source GetTextPosition(FormattedText, Point, Point) Declaration protected override Point GetTextPosition(FormattedText text, Point source, Point target) Parameters Type Name Description FormattedText text Point source Point target Returns Type Description Point Overrides BaseConnection.GetTextPosition(FormattedText, Point, Point)"
  },
  "api/Nodify.Connection.html": {
    "href": "api/Nodify.Connection.html",
    "title": "Class Connection | Nodify-Docs",
    "keywords": "Class Connection Represents a cubic bezier curve. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Shape BaseConnection Connection Inherited Members BaseConnection.SourceProperty BaseConnection.TargetProperty BaseConnection.SourceOffsetProperty BaseConnection.TargetOffsetProperty BaseConnection.SourceOffsetModeProperty BaseConnection.TargetOffsetModeProperty BaseConnection.SourceOrientationProperty BaseConnection.TargetOrientationProperty BaseConnection.DirectionProperty BaseConnection.DirectionalArrowsCountProperty BaseConnection.DirectionalArrowsOffsetProperty BaseConnection.SpacingProperty BaseConnection.ArrowSizeProperty BaseConnection.ArrowEndsProperty BaseConnection.ArrowShapeProperty BaseConnection.SplitCommandProperty BaseConnection.DisconnectCommandProperty BaseConnection.ForegroundProperty BaseConnection.TextProperty BaseConnection.FontSizeProperty BaseConnection.FontFamilyProperty BaseConnection.FontWeightProperty BaseConnection.FontStyleProperty BaseConnection.FontStretchProperty BaseConnection.Source BaseConnection.Target BaseConnection.SourceOffset BaseConnection.TargetOffset BaseConnection.SourceOffsetMode BaseConnection.TargetOffsetMode BaseConnection.SourceOrientation BaseConnection.TargetOrientation BaseConnection.Direction BaseConnection.DirectionalArrowsCount BaseConnection.DirectionalArrowsOffset BaseConnection.ArrowEnds BaseConnection.ArrowShape BaseConnection.Spacing BaseConnection.ArrowSize BaseConnection.SplitCommand BaseConnection.DisconnectCommand BaseConnection.Foreground BaseConnection.Text BaseConnection.FontSize BaseConnection.FontFamily BaseConnection.FontStyle BaseConnection.FontWeight BaseConnection.FontStretch BaseConnection.DisconnectEvent BaseConnection.SplitEvent BaseConnection.Disconnect BaseConnection.Split BaseConnection.ZeroVector BaseConnection.DefiningGeometry BaseConnection.DrawDirectionalArrowheadGeometry(StreamGeometryContext, Vector, Point) BaseConnection.DrawArrowGeometry(StreamGeometryContext, Point, Point, ConnectionDirection, ArrowHeadShape, Orientation) BaseConnection.DrawDefaultArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) BaseConnection.DrawRectangleArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) BaseConnection.DrawEllipseArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) BaseConnection.GetOffset() BaseConnection.StartAnimation(double) BaseConnection.StopAnimation() BaseConnection.OnMouseDown(MouseButtonEventArgs) BaseConnection.OnMouseUp(MouseButtonEventArgs) BaseConnection.OnRender(DrawingContext) Namespace: Nodify Assembly: Nodify.dll Syntax public class Connection : BaseConnection Methods | Edit this page View Source DrawDirectionalArrowsGeometry(StreamGeometryContext, Point, Point) Declaration protected override void DrawDirectionalArrowsGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target Overrides BaseConnection.DrawDirectionalArrowsGeometry(StreamGeometryContext, Point, Point) | Edit this page View Source DrawLineGeometry(StreamGeometryContext, Point, Point) Declaration protected override ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) DrawLineGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target Returns Type Description ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) Overrides BaseConnection.DrawLineGeometry(StreamGeometryContext, Point, Point) | Edit this page View Source GetTextPosition(FormattedText, Point, Point) Declaration protected override Point GetTextPosition(FormattedText text, Point source, Point target) Parameters Type Name Description FormattedText text Point source Point target Returns Type Description Point Overrides BaseConnection.GetTextPosition(FormattedText, Point, Point) | Edit this page View Source InterpolateCubicBezier(Point, Point, Point, Point, double) Declaration protected static Point InterpolateCubicBezier(Point P0, Point P1, Point P2, Point P3, double t) Parameters Type Name Description Point P0 Point P1 Point P2 Point P3 double t Returns Type Description Point"
  },
  "api/Nodify.ConnectionDirection.html": {
    "href": "api/Nodify.ConnectionDirection.html",
    "title": "Enum ConnectionDirection | Nodify-Docs",
    "keywords": "Enum ConnectionDirection The direction in which a connection is oriented. Namespace: Nodify Assembly: Nodify.dll Syntax public enum ConnectionDirection Fields Name Description Backward From Target to Source. Forward From Source to Target."
  },
  "api/Nodify.ConnectionEventArgs.html": {
    "href": "api/Nodify.ConnectionEventArgs.html",
    "title": "Class ConnectionEventArgs | Nodify-Docs",
    "keywords": "Class ConnectionEventArgs Provides data for BaseConnection related routed events. Inheritance object EventArgs RoutedEventArgs ConnectionEventArgs Namespace: Nodify Assembly: Nodify.dll Syntax public class ConnectionEventArgs : RoutedEventArgs Constructors | Edit this page View Source ConnectionEventArgs(object) Initializes a new instance of the ConnectionEventArgs class using the specified Connection. Declaration public ConnectionEventArgs(object connection) Parameters Type Name Description object connection The DataContext of a related BaseConnection. Properties | Edit this page View Source Connection Gets the DataContext of the BaseConnection associated with this event. Declaration public object Connection { get; } Property Value Type Description object | Edit this page View Source SplitLocation Gets or sets the location where the connection should be split. Declaration public Point SplitLocation { get; set; } Property Value Type Description Point Methods | Edit this page View Source InvokeEventHandler(Delegate, object) When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation. Declaration protected override void InvokeEventHandler(Delegate genericHandler, object genericTarget) Parameters Type Name Description Delegate genericHandler The generic handler / delegate implementation to be invoked. object genericTarget The target on which the provided handler should be invoked. Overrides RoutedEventArgs.InvokeEventHandler(Delegate, object)"
  },
  "api/Nodify.ConnectionEventHandler.html": {
    "href": "api/Nodify.ConnectionEventHandler.html",
    "title": "Delegate ConnectionEventHandler | Nodify-Docs",
    "keywords": "Delegate ConnectionEventHandler Represents the method that will handle BaseConnection related routed events. Namespace: Nodify Assembly: Nodify.dll Syntax public delegate void ConnectionEventHandler(object sender, ConnectionEventArgs e) Parameters Type Name Description object sender The object where the event handler is attached. ConnectionEventArgs e The event data."
  },
  "api/Nodify.ConnectionOffsetMode.html": {
    "href": "api/Nodify.ConnectionOffsetMode.html",
    "title": "Enum ConnectionOffsetMode | Nodify-Docs",
    "keywords": "Enum ConnectionOffsetMode Specifies the offset type that can be applied to a BaseConnection using the SourceOffset and the TargetOffset values. Namespace: Nodify Assembly: Nodify.dll Syntax public enum ConnectionOffsetMode Fields Name Description Circle The offset is applied in a circle around the point. Edge The offset is applied in a rectangle shape around the point, perpendicular to the edges. None No offset applied. Rectangle The offset is applied in a rectangle shape around the point. Static The offset is applied as a fixed margin."
  },
  "api/Nodify.Connector.html": {
    "href": "api/Nodify.Connector.html",
    "title": "Class Connector | Nodify-Docs",
    "keywords": "Class Connector Represents a connector control that can start and complete a PendingConnection. Has a ElementConnector that the Anchor is calculated from for the PendingConnection. Center of this control is used if missing. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control Connector NodeInput NodeOutput StateNode Namespace: Nodify Assembly: Nodify.dll Syntax [TemplatePart(Name = \"PART_Connector\", Type = typeof(FrameworkElement))] public class Connector : Control Fields | Edit this page View Source AnchorProperty Declaration public static readonly DependencyProperty AnchorProperty Field Value Type Description DependencyProperty | Edit this page View Source DisconnectCommandProperty Declaration public static readonly DependencyProperty DisconnectCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source DisconnectEvent Declaration public static readonly RoutedEvent DisconnectEvent Field Value Type Description RoutedEvent | Edit this page View Source ElementConnector Declaration protected const string ElementConnector = \"PART_Connector\" Field Value Type Description string | Edit this page View Source EnableOptimizations Gets or sets if Connectors should enable optimizations based on OptimizeSafeZone and OptimizeMinimumSelectedItems. Declaration public static bool EnableOptimizations Field Value Type Description bool | Edit this page View Source IsConnectedProperty Declaration public static readonly DependencyProperty IsConnectedProperty Field Value Type Description DependencyProperty | Edit this page View Source IsPendingConnectionProperty Declaration public static readonly DependencyProperty IsPendingConnectionProperty Field Value Type Description DependencyProperty | Edit this page View Source OptimizeMinimumSelectedItems Gets or sets the minimum selected items needed to trigger optimizations when outside of the OptimizeSafeZone. Declaration public static uint OptimizeMinimumSelectedItems Field Value Type Description uint | Edit this page View Source OptimizeSafeZone Gets or sets the safe zone outside the editor's viewport that will not trigger optimizations. Declaration public static double OptimizeSafeZone Field Value Type Description double | Edit this page View Source PendingConnectionCompletedEvent Declaration public static readonly RoutedEvent PendingConnectionCompletedEvent Field Value Type Description RoutedEvent | Edit this page View Source PendingConnectionDragEvent Declaration public static readonly RoutedEvent PendingConnectionDragEvent Field Value Type Description RoutedEvent | Edit this page View Source PendingConnectionStartedEvent Declaration public static readonly RoutedEvent PendingConnectionStartedEvent Field Value Type Description RoutedEvent Properties | Edit this page View Source AllowPendingConnectionCancellation Gets or sets whether cancelling a pending connection is allowed. Declaration public static bool AllowPendingConnectionCancellation { get; set; } Property Value Type Description bool | Edit this page View Source Anchor Gets the location where Connections can be attached to. Bind with OneWayToSource Declaration public Point Anchor { get; set; } Property Value Type Description Point | Edit this page View Source Container Gets the ItemContainer that contains this Connector. Declaration protected ItemContainer? Container { get; } Property Value Type Description ItemContainer | Edit this page View Source DisconnectCommand Invoked if the Disconnect event is not handled. Parameter is the DataContext of this control. Declaration public ICommand? DisconnectCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source Editor Gets the NodifyEditor that owns this Container. Declaration protected NodifyEditor? Editor { get; } Property Value Type Description NodifyEditor | Edit this page View Source EnableStickyConnections Gets or sets whether the connection should be completed in two steps. Declaration public static bool EnableStickyConnections { get; set; } Property Value Type Description bool | Edit this page View Source IsConnected If this is set to false, the Disconnect event will not be invoked and the connector will stop updating its Anchor when moved, resized etc. Declaration public bool IsConnected { get; set; } Property Value Type Description bool | Edit this page View Source IsPendingConnection Gets a value that indicates whether a PendingConnection is in progress for this Connector. Declaration public bool IsPendingConnection { get; protected set; } Property Value Type Description bool | Edit this page View Source Thumb Gets the FrameworkElement used to calculate the Anchor. Declaration protected FrameworkElement? Thumb { get; } Property Value Type Description FrameworkElement Methods | Edit this page View Source OnApplyTemplate() When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate(). Declaration public override void OnApplyTemplate() Overrides FrameworkElement.OnApplyTemplate() | Edit this page View Source OnConnectorDrag(Vector) Declaration protected virtual void OnConnectorDrag(Vector offset) Parameters Type Name Description Vector offset | Edit this page View Source OnConnectorDragCompleted(bool) Declaration protected virtual void OnConnectorDragCompleted(bool cancel = false) Parameters Type Name Description bool cancel | Edit this page View Source OnConnectorDragStarted() Declaration protected virtual void OnConnectorDragStarted() | Edit this page View Source OnDisconnect() Declaration protected virtual void OnDisconnect() | Edit this page View Source OnKeyUp(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. Overrides UIElement.OnKeyUp(KeyEventArgs) | Edit this page View Source OnLostMouseCapture(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.LostMouseCapture attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnLostMouseCapture(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains event data. Overrides UIElement.OnLostMouseCapture(MouseEventArgs) | Edit this page View Source OnMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides UIElement.OnMouseDown(MouseButtonEventArgs) | Edit this page View Source OnMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides UIElement.OnMouseMove(MouseEventArgs) | Edit this page View Source OnMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. Overrides UIElement.OnMouseUp(MouseButtonEventArgs) | Edit this page View Source OnRenderSizeChanged(SizeChangedInfo) Raises the SizeChanged event, using the specified information as part of the eventual event data. Declaration protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo) Parameters Type Name Description SizeChangedInfo sizeInfo Details of the old and new size involved in the change. Overrides FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) | Edit this page View Source UpdateAnchor() Updates the Anchor based on Container's location. Declaration public void UpdateAnchor() | Edit this page View Source UpdateAnchor(Point) Updates the Anchor relative to a location. (usually Container's location) Declaration protected void UpdateAnchor(Point location) Parameters Type Name Description Point location The relative location | Edit this page View Source UpdateAnchorOptimized(Point) Updates the Anchor and applies optimizations if needed based on EnableOptimizations flag Declaration protected void UpdateAnchorOptimized(Point location) Parameters Type Name Description Point location Events | Edit this page View Source Disconnect Triggered by the EditorGestures.Connector.Disconnect gesture. Declaration public event ConnectorEventHandler Disconnect Event Type Type Description ConnectorEventHandler | Edit this page View Source PendingConnectionCompleted Triggered by the EditorGestures.Connector.Connect gesture. Declaration public event PendingConnectionEventHandler PendingConnectionCompleted Event Type Type Description PendingConnectionEventHandler | Edit this page View Source PendingConnectionDrag Occurs when the mouse is changing position and the Connector has mouse capture. Declaration public event PendingConnectionEventHandler PendingConnectionDrag Event Type Type Description PendingConnectionEventHandler | Edit this page View Source PendingConnectionStarted Triggered by the EditorGestures.Connector.Connect gesture. Declaration public event PendingConnectionEventHandler PendingConnectionStarted Event Type Type Description PendingConnectionEventHandler"
  },
  "api/Nodify.ConnectorEventArgs.html": {
    "href": "api/Nodify.ConnectorEventArgs.html",
    "title": "Class ConnectorEventArgs | Nodify-Docs",
    "keywords": "Class ConnectorEventArgs Provides data for Connector related routed events. Inheritance object EventArgs RoutedEventArgs ConnectorEventArgs Namespace: Nodify Assembly: Nodify.dll Syntax public class ConnectorEventArgs : RoutedEventArgs Constructors | Edit this page View Source ConnectorEventArgs(object) Initializes a new instance of the ConnectorEventArgs class using the specified Connector. Declaration public ConnectorEventArgs(object connector) Parameters Type Name Description object connector The DataContext of a related Connector. Properties | Edit this page View Source Anchor Gets or sets the Anchor of the Connector associated with this event. Declaration public Point Anchor { get; set; } Property Value Type Description Point | Edit this page View Source Connector Gets the DataContext of the Connector associated with this event. Declaration public object Connector { get; } Property Value Type Description object Methods | Edit this page View Source InvokeEventHandler(Delegate, object) When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation. Declaration protected override void InvokeEventHandler(Delegate genericHandler, object genericTarget) Parameters Type Name Description Delegate genericHandler The generic handler / delegate implementation to be invoked. object genericTarget The target on which the provided handler should be invoked. Overrides RoutedEventArgs.InvokeEventHandler(Delegate, object)"
  },
  "api/Nodify.ConnectorEventHandler.html": {
    "href": "api/Nodify.ConnectorEventHandler.html",
    "title": "Delegate ConnectorEventHandler | Nodify-Docs",
    "keywords": "Delegate ConnectorEventHandler Represents the method that will handle Connector related routed events. Namespace: Nodify Assembly: Nodify.dll Syntax public delegate void ConnectorEventHandler(object sender, ConnectorEventArgs e) Parameters Type Name Description object sender The object where the event handler is attached. ConnectorEventArgs e The event data."
  },
  "api/Nodify.ContainerDefaultState.html": {
    "href": "api/Nodify.ContainerDefaultState.html",
    "title": "Class ContainerDefaultState | Nodify-Docs",
    "keywords": "Class ContainerDefaultState The default state of the ItemContainer. Inheritance object ContainerState ContainerDefaultState Inherited Members ContainerState.Container ContainerState.Editor ContainerState.HandleMouseWheel(MouseWheelEventArgs) ContainerState.HandleKeyUp(KeyEventArgs) ContainerState.HandleKeyDown(KeyEventArgs) ContainerState.Enter(ContainerState) ContainerState.Exit() ContainerState.PushState(ContainerState) ContainerState.PopState() Namespace: Nodify Assembly: Nodify.dll Syntax public class ContainerDefaultState : ContainerState Constructors | Edit this page View Source ContainerDefaultState(ItemContainer) Creates a new instance of the ContainerDefaultState. Declaration public ContainerDefaultState(ItemContainer container) Parameters Type Name Description ItemContainer container The owner of the state. Methods | Edit this page View Source HandleMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides ContainerState.HandleMouseDown(MouseButtonEventArgs) | Edit this page View Source HandleMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides ContainerState.HandleMouseMove(MouseEventArgs) | Edit this page View Source HandleMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides ContainerState.HandleMouseUp(MouseButtonEventArgs) | Edit this page View Source ReEnter(ContainerState) Called when PopState() is called. Declaration public override void ReEnter(ContainerState from) Parameters Type Name Description ContainerState from The state we re-enter from. Overrides ContainerState.ReEnter(ContainerState)"
  },
  "api/Nodify.ContainerDraggingState.html": {
    "href": "api/Nodify.ContainerDraggingState.html",
    "title": "Class ContainerDraggingState | Nodify-Docs",
    "keywords": "Class ContainerDraggingState Dragging state of the container. Inheritance object ContainerState ContainerDraggingState Inherited Members ContainerState.Container ContainerState.Editor ContainerState.HandleMouseDown(MouseButtonEventArgs) ContainerState.HandleMouseWheel(MouseWheelEventArgs) ContainerState.HandleKeyDown(KeyEventArgs) ContainerState.ReEnter(ContainerState) ContainerState.PushState(ContainerState) ContainerState.PopState() Namespace: Nodify Assembly: Nodify.dll Syntax public class ContainerDraggingState : ContainerState Constructors | Edit this page View Source ContainerDraggingState(ItemContainer) Constructs an instance of the ContainerDraggingState state. Declaration public ContainerDraggingState(ItemContainer container) Parameters Type Name Description ItemContainer container The owner of the state. Properties | Edit this page View Source Canceled Declaration public bool Canceled { get; set; } Property Value Type Description bool Methods | Edit this page View Source Enter(ContainerState?) Called when PushState(ContainerState) or PopState() is called. Declaration public override void Enter(ContainerState? from) Parameters Type Name Description ContainerState from The state we enter from (is null for root state). Overrides ContainerState.Enter(ContainerState?) | Edit this page View Source Exit() Called when PopState() is called. Declaration public override void Exit() Overrides ContainerState.Exit() | Edit this page View Source HandleKeyUp(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. Overrides ContainerState.HandleKeyUp(KeyEventArgs) | Edit this page View Source HandleMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides ContainerState.HandleMouseMove(MouseEventArgs) | Edit this page View Source HandleMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides ContainerState.HandleMouseUp(MouseButtonEventArgs)"
  },
  "api/Nodify.ContainerState.html": {
    "href": "api/Nodify.ContainerState.html",
    "title": "Class ContainerState | Nodify-Docs",
    "keywords": "Class ContainerState The base class for container states. Inheritance object ContainerState ContainerDefaultState ContainerDraggingState Namespace: Nodify Assembly: Nodify.dll Syntax public abstract class ContainerState Constructors | Edit this page View Source ContainerState(ItemContainer) Constructs a new ContainerState. Declaration public ContainerState(ItemContainer container) Parameters Type Name Description ItemContainer container The owner of the state. Properties | Edit this page View Source Container The owner of the state. Declaration protected ItemContainer Container { get; } Property Value Type Description ItemContainer | Edit this page View Source Editor The owner of the state. Declaration protected NodifyEditor Editor { get; } Property Value Type Description NodifyEditor Methods | Edit this page View Source Enter(ContainerState?) Called when PushState(ContainerState) or PopState() is called. Declaration public virtual void Enter(ContainerState? from) Parameters Type Name Description ContainerState from The state we enter from (is null for root state). | Edit this page View Source Exit() Called when PopState() is called. Declaration public virtual void Exit() | Edit this page View Source HandleKeyDown(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleKeyDown(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. | Edit this page View Source HandleKeyUp(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. | Edit this page View Source HandleMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. | Edit this page View Source HandleMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. | Edit this page View Source HandleMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. | Edit this page View Source HandleMouseWheel(MouseWheelEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseWheel attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseWheel(MouseWheelEventArgs e) Parameters Type Name Description MouseWheelEventArgs e The MouseWheelEventArgs that contains the event data. | Edit this page View Source PopState() Pops the current state from the stack. Declaration public virtual void PopState() | Edit this page View Source PushState(ContainerState) Pushes a new state into the stack. Declaration public virtual void PushState(ContainerState newState) Parameters Type Name Description ContainerState newState The new state. | Edit this page View Source ReEnter(ContainerState) Called when PopState() is called. Declaration public virtual void ReEnter(ContainerState from) Parameters Type Name Description ContainerState from The state we re-enter from."
  },
  "api/Nodify.DecoratorContainer.html": {
    "href": "api/Nodify.DecoratorContainer.html",
    "title": "Class DecoratorContainer | Nodify-Docs",
    "keywords": "Class DecoratorContainer The container for all the items generated from the Decorators collection. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl DecoratorContainer Implements INodifyCanvasItem Namespace: Nodify Assembly: Nodify.dll Syntax public class DecoratorContainer : ContentControl, INodifyCanvasItem Fields | Edit this page View Source ActualSizeProperty Declaration public static readonly DependencyProperty ActualSizeProperty Field Value Type Description DependencyProperty | Edit this page View Source LocationChangedEvent Declaration public static readonly RoutedEvent LocationChangedEvent Field Value Type Description RoutedEvent | Edit this page View Source LocationProperty Declaration public static readonly DependencyProperty LocationProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source ActualSize Gets the actual size of this DecoratorContainer. Declaration public Size ActualSize { get; set; } Property Value Type Description Size | Edit this page View Source Location Gets or sets the location of this DecoratorContainer inside the NodifyEditor.DecoratorsHost. Declaration public Point Location { get; set; } Property Value Type Description Point Methods | Edit this page View Source OnLocationChanged() Raises the LocationChangedEvent. Declaration protected void OnLocationChanged() | Edit this page View Source OnRenderSizeChanged(SizeChangedInfo) Raises the SizeChanged event, using the specified information as part of the eventual event data. Declaration protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo) Parameters Type Name Description SizeChangedInfo sizeInfo Details of the old and new size involved in the change. Overrides FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) Events | Edit this page View Source LocationChanged Occurs when the Location of this DecoratorContainer is changed. Declaration public event RoutedEventHandler LocationChanged Event Type Type Description RoutedEventHandler Implements INodifyCanvasItem"
  },
  "api/Nodify.EditorCommands.Alignment.html": {
    "href": "api/Nodify.EditorCommands.Alignment.html",
    "title": "Enum EditorCommands.Alignment | Nodify-Docs",
    "keywords": "Enum EditorCommands.Alignment Specifies the possible alignment values used by the Align command. Namespace: Nodify Assembly: Nodify.dll Syntax public enum EditorCommands.Alignment Fields Name Description Bottom Center Left Middle Right Top"
  },
  "api/Nodify.EditorCommands.html": {
    "href": "api/Nodify.EditorCommands.html",
    "title": "Class EditorCommands | Nodify-Docs",
    "keywords": "Class EditorCommands Inheritance object EditorCommands Namespace: Nodify Assembly: Nodify.dll Syntax public static class EditorCommands Properties | Edit this page View Source Align Aligns SelectedItems using the specified alignment method. Parameter is of type EditorCommands.Alignment or a string that can be converted to an alignment. Declaration public static RoutedUICommand Align { get; } Property Value Type Description RoutedUICommand | Edit this page View Source BringIntoView Moves the ViewportLocation to the specified location. Parameter is a Point or a string that can be converted to a point. Declaration public static RoutedUICommand BringIntoView { get; } Property Value Type Description RoutedUICommand | Edit this page View Source FitToScreen Scales the editor's viewport to fit all the ItemContainers if that's possible. Declaration public static RoutedUICommand FitToScreen { get; } Property Value Type Description RoutedUICommand | Edit this page View Source SelectAll Select all ItemContainers in the NodifyEditor. Declaration public static RoutedUICommand SelectAll { get; } Property Value Type Description RoutedUICommand | Edit this page View Source ZoomIn Zoom in relative to the editor's viewport center. Declaration public static RoutedUICommand ZoomIn { get; } Property Value Type Description RoutedUICommand | Edit this page View Source ZoomOut Zoom out relative to the editor's viewport center. Declaration public static RoutedUICommand ZoomOut { get; } Property Value Type Description RoutedUICommand"
  },
  "api/Nodify.EditorDefaultState.html": {
    "href": "api/Nodify.EditorDefaultState.html",
    "title": "Class EditorDefaultState | Nodify-Docs",
    "keywords": "Class EditorDefaultState The default state of the editor. Default State - mouse left down -> Selecting State - mouse right down -> Panning State Selecting State - mouse left up -> Default State - mouse right down -> Panning State Panning State - mouse right up -> previous state (Selecting State or Default State) - mouse left up -> Panning State Inheritance object EditorState EditorDefaultState Inherited Members EditorState.Editor EditorState.HandleMouseUp(MouseButtonEventArgs) EditorState.HandleMouseMove(MouseEventArgs) EditorState.HandleMouseWheel(MouseWheelEventArgs) EditorState.HandleAutoPanning(MouseEventArgs) EditorState.HandleKeyUp(KeyEventArgs) EditorState.HandleKeyDown(KeyEventArgs) EditorState.Enter(EditorState) EditorState.Exit() EditorState.ReEnter(EditorState) EditorState.PushState(EditorState) EditorState.PopState() Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorDefaultState : EditorState Constructors | Edit this page View Source EditorDefaultState(NodifyEditor) Constructs an instance of the EditorDefaultState state. Declaration public EditorDefaultState(NodifyEditor editor) Parameters Type Name Description NodifyEditor editor The owner of the state. Methods | Edit this page View Source HandleMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides EditorState.HandleMouseDown(MouseButtonEventArgs)"
  },
  "api/Nodify.EditorGestures.ConnectionGestures.html": {
    "href": "api/Nodify.EditorGestures.ConnectionGestures.html",
    "title": "Class EditorGestures.ConnectionGestures | Nodify-Docs",
    "keywords": "Class EditorGestures.ConnectionGestures Gestures used by the BaseConnection. Inheritance object EditorGestures.ConnectionGestures Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorGestures.ConnectionGestures Constructors | Edit this page View Source ConnectionGestures() Declaration public ConnectionGestures() Properties | Edit this page View Source Disconnect Gesture to call the DisconnectCommand command. Declaration public InputGestureRef Disconnect { get; } Property Value Type Description InputGestureRef Remarks Defaults to Alt+LeftClick. | Edit this page View Source Split Gesture to call the SplitCommand command. Declaration public InputGestureRef Split { get; } Property Value Type Description InputGestureRef Remarks Defaults to LeftDoubleClick. Methods | Edit this page View Source Apply(ConnectionGestures) Copies from the specified gestures. Declaration public void Apply(EditorGestures.ConnectionGestures gestures) Parameters Type Name Description EditorGestures.ConnectionGestures gestures The gestures to copy."
  },
  "api/Nodify.EditorGestures.ConnectorGestures.html": {
    "href": "api/Nodify.EditorGestures.ConnectorGestures.html",
    "title": "Class EditorGestures.ConnectorGestures | Nodify-Docs",
    "keywords": "Class EditorGestures.ConnectorGestures Gestures used by the Connector. Inheritance object EditorGestures.ConnectorGestures Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorGestures.ConnectorGestures Constructors | Edit this page View Source ConnectorGestures() Declaration public ConnectorGestures() Properties | Edit this page View Source CancelAction Gesture to cancel the pending connection. Declaration public InputGestureRef CancelAction { get; } Property Value Type Description InputGestureRef Remarks Defaults to RightClick or Escape. | Edit this page View Source Connect Gesture to start and complete a pending connection. Declaration public InputGestureRef Connect { get; } Property Value Type Description InputGestureRef Remarks Defaults to LeftClick. | Edit this page View Source Disconnect Gesture to call the DisconnectCommand. Declaration public InputGestureRef Disconnect { get; } Property Value Type Description InputGestureRef Remarks Defaults to Alt+LeftClick. Methods | Edit this page View Source Apply(ConnectorGestures) Copies from the specified gestures. Declaration public void Apply(EditorGestures.ConnectorGestures gestures) Parameters Type Name Description EditorGestures.ConnectorGestures gestures The gestures to copy."
  },
  "api/Nodify.EditorGestures.GroupingNodeGestures.html": {
    "href": "api/Nodify.EditorGestures.GroupingNodeGestures.html",
    "title": "Class EditorGestures.GroupingNodeGestures | Nodify-Docs",
    "keywords": "Class EditorGestures.GroupingNodeGestures Gestures for the GroupingNode. Inheritance object EditorGestures.GroupingNodeGestures Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorGestures.GroupingNodeGestures Properties | Edit this page View Source SwitchMovementMode The key modifier that will toggle between GroupingMovementModes. Declaration public ModifierKeys SwitchMovementMode { get; set; } Property Value Type Description ModifierKeys Remarks The modifier must be allowed by the ItemContainer.Drag gesture. Defaults to Shift. Methods | Edit this page View Source Apply(GroupingNodeGestures) Copies from the specified gestures. Declaration public void Apply(EditorGestures.GroupingNodeGestures gestures) Parameters Type Name Description EditorGestures.GroupingNodeGestures gestures The gestures to copy."
  },
  "api/Nodify.EditorGestures.ItemContainerGestures.html": {
    "href": "api/Nodify.EditorGestures.ItemContainerGestures.html",
    "title": "Class EditorGestures.ItemContainerGestures | Nodify-Docs",
    "keywords": "Class EditorGestures.ItemContainerGestures Gestures for the item containers. Inheritance object EditorGestures.ItemContainerGestures Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorGestures.ItemContainerGestures Constructors | Edit this page View Source ItemContainerGestures() Declaration public ItemContainerGestures() Properties | Edit this page View Source CancelAction Gesture to cancel the dragging operation. Declaration public InputGestureRef CancelAction { get; } Property Value Type Description InputGestureRef Remarks Defaults to RightClick or Escape. | Edit this page View Source Drag Gesture to start and complete a dragging operation. Declaration public InputGestureRef Drag { get; } Property Value Type Description InputGestureRef Remarks Using a Selection strategy to drag from a new selection. Defaults to any of the Selection gestures. | Edit this page View Source Selection Gesture to select the container using a EditorGestures.SelectionGestures strategy. Declaration public EditorGestures.SelectionGestures Selection { get; } Property Value Type Description EditorGestures.SelectionGestures Remarks Defaults to RightClick or any of the EditorGestures.SelectionGestures gestures. Methods | Edit this page View Source Apply(ItemContainerGestures) Copies from the specified gestures. Declaration public void Apply(EditorGestures.ItemContainerGestures gestures) Parameters Type Name Description EditorGestures.ItemContainerGestures gestures The gestures to copy."
  },
  "api/Nodify.EditorGestures.NodifyEditorGestures.html": {
    "href": "api/Nodify.EditorGestures.NodifyEditorGestures.html",
    "title": "Class EditorGestures.NodifyEditorGestures | Nodify-Docs",
    "keywords": "Class EditorGestures.NodifyEditorGestures Gestures for the editor. Inheritance object EditorGestures.NodifyEditorGestures Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorGestures.NodifyEditorGestures Constructors | Edit this page View Source NodifyEditorGestures() Declaration public NodifyEditorGestures() Properties | Edit this page View Source FitToScreen Gesture used to fit as many containers as possible into the viewport. Declaration public InputGestureRef FitToScreen { get; } Property Value Type Description InputGestureRef Remarks Defaults to Shift+Home. | Edit this page View Source Pan Gesture used to start panning. Declaration public InputGestureRef Pan { get; } Property Value Type Description InputGestureRef Remarks Defaults to RightClick or MiddleClick. | Edit this page View Source ResetViewportLocation Gesture used to move the editor's viewport location to (0, 0). Declaration public InputGestureRef ResetViewportLocation { get; } Property Value Type Description InputGestureRef Remarks Defaults to Home. | Edit this page View Source Selection Gesture used to start selecting using a EditorGestures.SelectionGestures strategy. Declaration public EditorGestures.SelectionGestures Selection { get; } Property Value Type Description EditorGestures.SelectionGestures | Edit this page View Source ZoomIn Gesture used to zoom in. Declaration public InputGestureRef ZoomIn { get; } Property Value Type Description InputGestureRef Remarks Defaults to Control+OemPlus. | Edit this page View Source ZoomModifierKey The key modifier required to start zooming by mouse wheel. Declaration public ModifierKeys ZoomModifierKey { get; set; } Property Value Type Description ModifierKeys Remarks Defaults to None. | Edit this page View Source ZoomOut Gesture used to zoom out. Declaration public InputGestureRef ZoomOut { get; } Property Value Type Description InputGestureRef Remarks Defaults to Control+OemMinus. Methods | Edit this page View Source Apply(NodifyEditorGestures) Copies from the specified gestures. Declaration public void Apply(EditorGestures.NodifyEditorGestures gestures) Parameters Type Name Description EditorGestures.NodifyEditorGestures gestures The gestures to copy."
  },
  "api/Nodify.EditorGestures.SelectionGestures.html": {
    "href": "api/Nodify.EditorGestures.SelectionGestures.html",
    "title": "Class EditorGestures.SelectionGestures | Nodify-Docs",
    "keywords": "Class EditorGestures.SelectionGestures Gestures for the selection. Inheritance object EditorGestures.SelectionGestures Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorGestures.SelectionGestures Constructors | Edit this page View Source SelectionGestures() Declaration public SelectionGestures() | Edit this page View Source SelectionGestures(MouseAction) Declaration public SelectionGestures(MouseAction mouseAction) Parameters Type Name Description MouseAction mouseAction Fields | Edit this page View Source None Disable selection gestures. Declaration public static readonly EditorGestures.SelectionGestures None Field Value Type Description EditorGestures.SelectionGestures Properties | Edit this page View Source Append Gesture to add the new selected items to the previous selection. Declaration public InputGestureRef Append { get; } Property Value Type Description InputGestureRef Remarks Defaults to Shift+LeftClick. | Edit this page View Source Cancel Cancel the current selection operation reverting to the previous selection. Declaration public InputGestureRef Cancel { get; } Property Value Type Description InputGestureRef Remarks Defaults to Escape. | Edit this page View Source Invert Gesture to invert the selected items. Declaration public InputGestureRef Invert { get; } Property Value Type Description InputGestureRef Remarks Defaults to Control+LeftClick. | Edit this page View Source Remove Gesture to remove the selected items from the previous selection. Declaration public InputGestureRef Remove { get; } Property Value Type Description InputGestureRef Remarks Defaults to Alt+LeftClick. | Edit this page View Source Replace Gesture to replace previous selection with the selected items. Declaration public InputGestureRef Replace { get; } Property Value Type Description InputGestureRef Remarks Defaults to LeftClick. | Edit this page View Source Select Gesture used to start selecting using a EditorGestures.SelectionGestures strategy. Declaration public InputGestureRef Select { get; } Property Value Type Description InputGestureRef Methods | Edit this page View Source Apply(SelectionGestures) Copies from the specified gestures. Declaration public void Apply(EditorGestures.SelectionGestures gestures) Parameters Type Name Description EditorGestures.SelectionGestures gestures The gestures to copy."
  },
  "api/Nodify.EditorGestures.html": {
    "href": "api/Nodify.EditorGestures.html",
    "title": "Class EditorGestures | Nodify-Docs",
    "keywords": "Class EditorGestures Gestures used by built-in controls inside the NodifyEditor. Inheritance object EditorGestures Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorGestures Fields | Edit this page View Source Mappings Declaration public static readonly EditorGestures Mappings Field Value Type Description EditorGestures Properties | Edit this page View Source Connection Gestures for the connection. Declaration public EditorGestures.ConnectionGestures Connection { get; } Property Value Type Description EditorGestures.ConnectionGestures | Edit this page View Source Connector Gestures for the connector. Declaration public EditorGestures.ConnectorGestures Connector { get; } Property Value Type Description EditorGestures.ConnectorGestures | Edit this page View Source Editor Gestures for the editor. Declaration public EditorGestures.NodifyEditorGestures Editor { get; } Property Value Type Description EditorGestures.NodifyEditorGestures | Edit this page View Source GroupingNode Gestures for the grouping node. Declaration public EditorGestures.GroupingNodeGestures GroupingNode { get; } Property Value Type Description EditorGestures.GroupingNodeGestures | Edit this page View Source ItemContainer Gestures for the item container. Declaration public EditorGestures.ItemContainerGestures ItemContainer { get; } Property Value Type Description EditorGestures.ItemContainerGestures Methods | Edit this page View Source Apply(EditorGestures) Copies from the specified gestures. Declaration public void Apply(EditorGestures gestures) Parameters Type Name Description EditorGestures gestures The gestures to copy."
  },
  "api/Nodify.EditorPanningState.html": {
    "href": "api/Nodify.EditorPanningState.html",
    "title": "Class EditorPanningState | Nodify-Docs",
    "keywords": "Class EditorPanningState The panning state of the editor. Inheritance object EditorState EditorPanningState Inherited Members EditorState.Editor EditorState.HandleMouseDown(MouseButtonEventArgs) EditorState.HandleMouseWheel(MouseWheelEventArgs) EditorState.HandleAutoPanning(MouseEventArgs) EditorState.HandleKeyUp(KeyEventArgs) EditorState.HandleKeyDown(KeyEventArgs) EditorState.ReEnter(EditorState) EditorState.PushState(EditorState) EditorState.PopState() Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorPanningState : EditorState Constructors | Edit this page View Source EditorPanningState(NodifyEditor) Constructs an instance of the EditorPanningState state. Declaration public EditorPanningState(NodifyEditor editor) Parameters Type Name Description NodifyEditor editor The owner of the state. Methods | Edit this page View Source Enter(EditorState?) Called when PushState(EditorState) is called. Declaration public override void Enter(EditorState? from) Parameters Type Name Description EditorState from The state we enter from (is null for root state). Overrides EditorState.Enter(EditorState?) | Edit this page View Source Exit() Called when PopState() is called. Declaration public override void Exit() Overrides EditorState.Exit() | Edit this page View Source HandleMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides EditorState.HandleMouseMove(MouseEventArgs) | Edit this page View Source HandleMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. Overrides EditorState.HandleMouseUp(MouseButtonEventArgs)"
  },
  "api/Nodify.EditorSelectingState.html": {
    "href": "api/Nodify.EditorSelectingState.html",
    "title": "Class EditorSelectingState | Nodify-Docs",
    "keywords": "Class EditorSelectingState The selecting state of the editor. Inheritance object EditorState EditorSelectingState Inherited Members EditorState.Editor EditorState.HandleMouseWheel(MouseWheelEventArgs) EditorState.HandleKeyDown(KeyEventArgs) EditorState.ReEnter(EditorState) EditorState.PushState(EditorState) EditorState.PopState() Namespace: Nodify Assembly: Nodify.dll Syntax public class EditorSelectingState : EditorState Constructors | Edit this page View Source EditorSelectingState(NodifyEditor, SelectionType) Constructs an instance of the EditorSelectingState state. Declaration public EditorSelectingState(NodifyEditor editor, SelectionHelper.SelectionType type) Parameters Type Name Description NodifyEditor editor The owner of the state. SelectionHelper.SelectionType type Properties | Edit this page View Source Selection The selection helper. Declaration protected SelectionHelper Selection { get; } Property Value Type Description SelectionHelper Methods | Edit this page View Source Enter(EditorState?) Called when PushState(EditorState) is called. Declaration public override void Enter(EditorState? from) Parameters Type Name Description EditorState from The state we enter from (is null for root state). Overrides EditorState.Enter(EditorState?) | Edit this page View Source Exit() Called when PopState() is called. Declaration public override void Exit() Overrides EditorState.Exit() | Edit this page View Source HandleAutoPanning(MouseEventArgs) Handles auto panning when mouse is outside the editor. Declaration public override void HandleAutoPanning(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides EditorState.HandleAutoPanning(MouseEventArgs) | Edit this page View Source HandleKeyUp(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. Overrides EditorState.HandleKeyUp(KeyEventArgs) | Edit this page View Source HandleMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides EditorState.HandleMouseDown(MouseButtonEventArgs) | Edit this page View Source HandleMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides EditorState.HandleMouseMove(MouseEventArgs) | Edit this page View Source HandleMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public override void HandleMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. Overrides EditorState.HandleMouseUp(MouseButtonEventArgs)"
  },
  "api/Nodify.EditorState.html": {
    "href": "api/Nodify.EditorState.html",
    "title": "Class EditorState | Nodify-Docs",
    "keywords": "Class EditorState The base class for editor states. Inheritance object EditorState EditorDefaultState EditorPanningState EditorSelectingState Namespace: Nodify Assembly: Nodify.dll Syntax public abstract class EditorState Constructors | Edit this page View Source EditorState(NodifyEditor) Constructs a new EditorState. Declaration public EditorState(NodifyEditor editor) Parameters Type Name Description NodifyEditor editor The owner of the state. Properties | Edit this page View Source Editor The owner of the state. Declaration protected NodifyEditor Editor { get; } Property Value Type Description NodifyEditor Methods | Edit this page View Source Enter(EditorState?) Called when PushState(EditorState) is called. Declaration public virtual void Enter(EditorState? from) Parameters Type Name Description EditorState from The state we enter from (is null for root state). | Edit this page View Source Exit() Called when PopState() is called. Declaration public virtual void Exit() | Edit this page View Source HandleAutoPanning(MouseEventArgs) Handles auto panning when mouse is outside the editor. Declaration public virtual void HandleAutoPanning(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. | Edit this page View Source HandleKeyDown(KeyEventArgs) Invoked when the KeyDown event is received. Declaration public virtual void HandleKeyDown(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e Information about the event. | Edit this page View Source HandleKeyUp(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. | Edit this page View Source HandleMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. | Edit this page View Source HandleMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. | Edit this page View Source HandleMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. | Edit this page View Source HandleMouseWheel(MouseWheelEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseWheel attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration public virtual void HandleMouseWheel(MouseWheelEventArgs e) Parameters Type Name Description MouseWheelEventArgs e The MouseWheelEventArgs that contains the event data. | Edit this page View Source PopState() Pops the current state from the stack. Declaration public virtual void PopState() | Edit this page View Source PushState(EditorState) Pushes a new state into the stack. Declaration public virtual void PushState(EditorState newState) Parameters Type Name Description EditorState newState The new state. | Edit this page View Source ReEnter(EditorState) Called when PopState() is called. Declaration public virtual void ReEnter(EditorState from) Parameters Type Name Description EditorState from The state we re-enter from."
  },
  "api/Nodify.GroupingMovementMode.html": {
    "href": "api/Nodify.GroupingMovementMode.html",
    "title": "Enum GroupingMovementMode | Nodify-Docs",
    "keywords": "Enum GroupingMovementMode Specifies the possible movement modes of a GroupingNode. Namespace: Nodify Assembly: Nodify.dll Syntax public enum GroupingMovementMode Fields Name Description Group The GroupingNode will move its content when moved. Self The GroupingNode will not move its content when moved."
  },
  "api/Nodify.GroupingNode.html": {
    "href": "api/Nodify.GroupingNode.html",
    "title": "Class GroupingNode | Nodify-Docs",
    "keywords": "Class GroupingNode Defines a panel with a header that groups ItemContainers inside it and can be resized. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl HeaderedContentControl GroupingNode Namespace: Nodify Assembly: Nodify.dll Syntax [TemplatePart(Name = \"PART_ResizeThumb\", Type = typeof(FrameworkElement))] [TemplatePart(Name = \"PART_Header\", Type = typeof(FrameworkElement))] [TemplatePart(Name = \"PART_Content\", Type = typeof(FrameworkElement))] public class GroupingNode : HeaderedContentControl Constructors | Edit this page View Source GroupingNode() Initializes a new instance of the GroupingNode class. Declaration public GroupingNode() Fields | Edit this page View Source ActualSizeProperty Declaration public static readonly DependencyProperty ActualSizeProperty Field Value Type Description DependencyProperty | Edit this page View Source CanResizeProperty Declaration public static readonly DependencyProperty CanResizeProperty Field Value Type Description DependencyProperty | Edit this page View Source ContentControl Gets the ContentControl control of this GroupingNode. Declaration protected FrameworkElement? ContentControl Field Value Type Description FrameworkElement | Edit this page View Source ElementContent Declaration protected const string ElementContent = \"PART_Content\" Field Value Type Description string | Edit this page View Source ElementHeader Declaration protected const string ElementHeader = \"PART_Header\" Field Value Type Description string | Edit this page View Source ElementResizeThumb Declaration protected const string ElementResizeThumb = \"PART_ResizeThumb\" Field Value Type Description string | Edit this page View Source GroupMovementBoxed Declaration protected static readonly object GroupMovementBoxed Field Value Type Description object | Edit this page View Source HeaderBrushProperty Declaration public static readonly DependencyProperty HeaderBrushProperty Field Value Type Description DependencyProperty | Edit this page View Source HeaderControl Gets the Header control of this GroupingNode. Declaration protected FrameworkElement? HeaderControl Field Value Type Description FrameworkElement | Edit this page View Source MovementModeProperty Declaration public static readonly DependencyProperty MovementModeProperty Field Value Type Description DependencyProperty | Edit this page View Source ResizeCompletedCommandProperty Declaration public static readonly DependencyProperty ResizeCompletedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ResizeCompletedEvent Declaration public static readonly RoutedEvent ResizeCompletedEvent Field Value Type Description RoutedEvent | Edit this page View Source ResizeStartedCommandProperty Declaration public static readonly DependencyProperty ResizeStartedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ResizeStartedEvent Declaration public static readonly RoutedEvent ResizeStartedEvent Field Value Type Description RoutedEvent | Edit this page View Source ResizeThumb Gets the FrameworkElement used to resize this GroupingNode. Declaration protected FrameworkElement? ResizeThumb Field Value Type Description FrameworkElement Properties | Edit this page View Source ActualSize Gets or sets the actual size of this GroupingNode. Declaration public Size ActualSize { get; set; } Property Value Type Description Size | Edit this page View Source CanResize Gets or sets a value that indicates whether this GroupingNode can be resized. Declaration public bool CanResize { get; set; } Property Value Type Description bool | Edit this page View Source Container Gets the NodifyEditor that owns this Container. Declaration protected ItemContainer? Container { get; } Property Value Type Description ItemContainer | Edit this page View Source Editor Gets the NodifyEditor that owns this GroupingNode. Declaration protected NodifyEditor? Editor { get; } Property Value Type Description NodifyEditor | Edit this page View Source HeaderBrush Gets or sets the brush used for the background of the Header of this GroupingNode. Declaration public Brush HeaderBrush { get; set; } Property Value Type Description Brush | Edit this page View Source MovementMode Gets or sets the default movement mode which can be temporarily changed by holding the SwitchMovementModeModifierKey while dragging by the header. Declaration public GroupingMovementMode MovementMode { get; set; } Property Value Type Description GroupingMovementMode | Edit this page View Source ResizeCompletedCommand Invoked when the ResizeCompleted event is not handled. Parameter is the ActualSize of the container. Declaration public ICommand? ResizeCompletedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source ResizeStartedCommand Invoked when the ResizeStarted event is not handled. Parameter is the ActualSize of the container. Declaration public ICommand? ResizeStartedCommand { get; set; } Property Value Type Description ICommand Methods | Edit this page View Source OnApplyTemplate() When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate(). Declaration public override void OnApplyTemplate() Overrides FrameworkElement.OnApplyTemplate() Events | Edit this page View Source ResizeCompleted Occurs when the node finished resizing. Declaration public event ResizeEventHandler ResizeCompleted Event Type Type Description ResizeEventHandler | Edit this page View Source ResizeStarted Occurs when the node started resizing. Declaration public event ResizeEventHandler ResizeStarted Event Type Type Description ResizeEventHandler"
  },
  "api/Nodify.INodifyCanvasItem.html": {
    "href": "api/Nodify.INodifyCanvasItem.html",
    "title": "Interface INodifyCanvasItem | Nodify-Docs",
    "keywords": "Interface INodifyCanvasItem Interface for items inside a NodifyCanvas. Namespace: Nodify Assembly: Nodify.dll Syntax public interface INodifyCanvasItem Properties | Edit this page View Source DesiredSize The desired size of the item. Declaration Size DesiredSize { get; } Property Value Type Description Size | Edit this page View Source Location The location of the item. Declaration Point Location { get; } Property Value Type Description Point Methods | Edit this page View Source Arrange(Rect) Positions child elements and determines a size for a UIElement. Parent elements call this method from their ArrangeCore(Rect) implementation (or a WPF framework-level equivalent) to form a recursive layout update. This method constitutes the second pass of a layout update. Declaration void Arrange(Rect rect) Parameters Type Name Description Rect rect"
  },
  "api/Nodify.InputGestureRef.html": {
    "href": "api/Nodify.InputGestureRef.html",
    "title": "Class InputGestureRef | Nodify-Docs",
    "keywords": "Class InputGestureRef An input gesture that allows changing its logic at runtime without changing its reference. Useful for classes that capture the object reference without the posibility of updating it. (e.g. EditorCommands) Inheritance object InputGesture InputGestureRef Namespace: Nodify Assembly: Nodify.dll Syntax public sealed class InputGestureRef : InputGesture Properties | Edit this page View Source Value The referenced gesture. Declaration public InputGesture Value { get; set; } Property Value Type Description InputGesture Methods | Edit this page View Source Matches(object, InputEventArgs) When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object. Declaration public override bool Matches(object targetElement, InputEventArgs inputEventArgs) Parameters Type Name Description object targetElement The target of the command. InputEventArgs inputEventArgs The input event data to compare this gesture to. Returns Type Description bool true if the gesture matches the input; otherwise, false. Overrides InputGesture.Matches(object, InputEventArgs) Operators | Edit this page View Source implicit operator InputGestureRef(MultiGesture) Declaration public static implicit operator InputGestureRef(MultiGesture gesture) Parameters Type Name Description MultiGesture gesture Returns Type Description InputGestureRef | Edit this page View Source implicit operator InputGestureRef(KeyGesture) Declaration public static implicit operator InputGestureRef(KeyGesture gesture) Parameters Type Name Description KeyGesture gesture Returns Type Description InputGestureRef | Edit this page View Source implicit operator InputGestureRef(MouseGesture) Declaration public static implicit operator InputGestureRef(MouseGesture gesture) Parameters Type Name Description MouseGesture gesture Returns Type Description InputGestureRef"
  },
  "api/Nodify.ItemContainer.html": {
    "href": "api/Nodify.ItemContainer.html",
    "title": "Class ItemContainer | Nodify-Docs",
    "keywords": "Class ItemContainer The container for all the items generated by the ItemsSource of the NodifyEditor. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl ItemContainer Implements INodifyCanvasItem Namespace: Nodify Assembly: Nodify.dll Syntax public class ItemContainer : ContentControl, INodifyCanvasItem Constructors | Edit this page View Source ItemContainer(NodifyEditor) Constructs an instance of an ItemContainer in the specified NodifyEditor. Declaration public ItemContainer(NodifyEditor editor) Parameters Type Name Description NodifyEditor editor Fields | Edit this page View Source ActualSizeProperty Declaration public static readonly DependencyProperty ActualSizeProperty Field Value Type Description DependencyProperty | Edit this page View Source DesiredSizeForSelectionProperty Declaration public static readonly DependencyProperty DesiredSizeForSelectionProperty Field Value Type Description DependencyProperty | Edit this page View Source DragCompletedEvent Declaration public static readonly RoutedEvent DragCompletedEvent Field Value Type Description RoutedEvent | Edit this page View Source DragDeltaEvent Declaration public static readonly RoutedEvent DragDeltaEvent Field Value Type Description RoutedEvent | Edit this page View Source DragStartedEvent Declaration public static readonly RoutedEvent DragStartedEvent Field Value Type Description RoutedEvent | Edit this page View Source HighlightBrushProperty Declaration public static readonly DependencyProperty HighlightBrushProperty Field Value Type Description DependencyProperty | Edit this page View Source IsDraggableProperty Declaration public static readonly DependencyProperty IsDraggableProperty Field Value Type Description DependencyProperty | Edit this page View Source IsPreviewingLocationProperty Declaration public static readonly DependencyProperty IsPreviewingLocationProperty Field Value Type Description DependencyProperty | Edit this page View Source IsPreviewingLocationPropertyKey Declaration public static readonly DependencyPropertyKey IsPreviewingLocationPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source IsPreviewingSelectionProperty Declaration public static readonly DependencyProperty IsPreviewingSelectionProperty Field Value Type Description DependencyProperty | Edit this page View Source IsPreviewingSelectionPropertyKey Declaration public static readonly DependencyPropertyKey IsPreviewingSelectionPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source IsSelectableProperty Declaration public static readonly DependencyProperty IsSelectableProperty Field Value Type Description DependencyProperty | Edit this page View Source IsSelectedProperty Declaration public static readonly DependencyProperty IsSelectedProperty Field Value Type Description DependencyProperty | Edit this page View Source LocationChangedEvent Declaration public static readonly RoutedEvent LocationChangedEvent Field Value Type Description RoutedEvent | Edit this page View Source LocationProperty Declaration public static readonly DependencyProperty LocationProperty Field Value Type Description DependencyProperty | Edit this page View Source SelectedBorderThicknessProperty Declaration public static readonly DependencyProperty SelectedBorderThicknessProperty Field Value Type Description DependencyProperty | Edit this page View Source SelectedBrushProperty Declaration public static readonly DependencyProperty SelectedBrushProperty Field Value Type Description DependencyProperty | Edit this page View Source SelectedEvent Declaration public static readonly RoutedEvent SelectedEvent Field Value Type Description RoutedEvent | Edit this page View Source UnselectedEvent Declaration public static readonly RoutedEvent UnselectedEvent Field Value Type Description RoutedEvent Properties | Edit this page View Source ActualSize Gets the actual size of this ItemContainer. Declaration public Size ActualSize { get; set; } Property Value Type Description Size | Edit this page View Source AllowDraggingCancellation Gets or sets whether cancelling a dragging operation is allowed. Declaration public static bool AllowDraggingCancellation { get; set; } Property Value Type Description bool | Edit this page View Source DesiredSizeForSelection Overrides the size to check against when calculating if this ItemContainer can be part of the current SelectedArea. Defaults to RenderSize. Declaration public Size? DesiredSizeForSelection { get; set; } Property Value Type Description Size? | Edit this page View Source Editor The NodifyEditor that owns this ItemContainer. Declaration public NodifyEditor Editor { get; } Property Value Type Description NodifyEditor | Edit this page View Source HighlightBrush Gets or sets the brush used when the IsOverElementProperty attached property is true for this ItemContainer. Declaration public Brush HighlightBrush { get; set; } Property Value Type Description Brush | Edit this page View Source IsDraggable Gets or sets whether this ItemContainer can be dragged. Declaration public bool IsDraggable { get; set; } Property Value Type Description bool | Edit this page View Source IsPreviewingLocation Gets a value indicating whether this ItemContainer is previewing a new location but didn't logically move there. Declaration public bool IsPreviewingLocation { get; protected set; } Property Value Type Description bool | Edit this page View Source IsPreviewingSelection Gets a value indicating whether this ItemContainer is about to change its IsSelected state. Declaration public bool? IsPreviewingSelection { get; } Property Value Type Description bool? | Edit this page View Source IsSelectable Gets or sets whether this ItemContainer can be selected. Declaration public bool IsSelectable { get; set; } Property Value Type Description bool | Edit this page View Source IsSelected Gets or sets a value that indicates whether this ItemContainer is selected. Can only be set if IsSelectable is true. Declaration public bool IsSelected { get; set; } Property Value Type Description bool | Edit this page View Source Location Gets or sets the location of this ItemContainer inside the NodifyEditor in graph space coordinates. Declaration public Point Location { get; set; } Property Value Type Description Point | Edit this page View Source SelectedBorderThickness Gets or sets the border thickness used when IsSelected or IsPreviewingSelection is true. Declaration public Thickness SelectedBorderThickness { get; set; } Property Value Type Description Thickness | Edit this page View Source SelectedBrush Gets or sets the brush used when IsSelected or IsPreviewingSelection is true. Declaration public Brush SelectedBrush { get; set; } Property Value Type Description Brush | Edit this page View Source SelectedMargin The calculated margin when the container is selected or previewing selection. Declaration public Thickness SelectedMargin { get; } Property Value Type Description Thickness | Edit this page View Source State The current state of the container. Declaration public ContainerState State { get; } Property Value Type Description ContainerState Methods | Edit this page View Source GetInitialState() Creates the initial state of the container. Declaration protected virtual ContainerState GetInitialState() Returns Type Description ContainerState The initial state. | Edit this page View Source IsSelectableInArea(Rect, bool) Checks if area contains or intersects with this ItemContainer taking into consideration the DesiredSizeForSelection. Declaration public virtual bool IsSelectableInArea(Rect area, bool isContained) Parameters Type Name Description Rect area The area to check if contains or intersects this ItemContainer. bool isContained If true will check if area contains this, otherwise will check if area intersects with this. Returns Type Description bool True if area contains or intersects this ItemContainer. | Edit this page View Source IsSelectableLocation(Point) Checks if position is selectable. Declaration protected virtual bool IsSelectableLocation(Point position) Parameters Type Name Description Point position A position relative to this ItemContainer. Returns Type Description bool True if position is selectable. | Edit this page View Source OnApplyTemplate() When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate(). Declaration public override void OnApplyTemplate() Overrides FrameworkElement.OnApplyTemplate() | Edit this page View Source OnKeyDown(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnKeyDown(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. Overrides UIElement.OnKeyDown(KeyEventArgs) | Edit this page View Source OnKeyUp(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. Overrides UIElement.OnKeyUp(KeyEventArgs) | Edit this page View Source OnLocationChanged() Raises the LocationChangedEvent and sets IsPreviewingLocation to false. Declaration protected void OnLocationChanged() | Edit this page View Source OnLostMouseCapture(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.LostMouseCapture attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnLostMouseCapture(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains event data. Overrides UIElement.OnLostMouseCapture(MouseEventArgs) | Edit this page View Source OnMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides UIElement.OnMouseDown(MouseButtonEventArgs) | Edit this page View Source OnMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides UIElement.OnMouseMove(MouseEventArgs) | Edit this page View Source OnMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. Overrides UIElement.OnMouseUp(MouseButtonEventArgs) | Edit this page View Source OnMouseWheel(MouseWheelEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseWheel attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseWheel(MouseWheelEventArgs e) Parameters Type Name Description MouseWheelEventArgs e The MouseWheelEventArgs that contains the event data. Overrides UIElement.OnMouseWheel(MouseWheelEventArgs) | Edit this page View Source OnPreviewLocationChanged(Point) Raises the PreviewLocationChanged event and sets the IsPreviewingLocation property to true. Declaration protected void OnPreviewLocationChanged(Point newLocation) Parameters Type Name Description Point newLocation The new location. | Edit this page View Source OnRenderSizeChanged(SizeChangedInfo) Raises the SizeChanged event, using the specified information as part of the eventual event data. Declaration protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo) Parameters Type Name Description SizeChangedInfo sizeInfo Details of the old and new size involved in the change. Overrides FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) | Edit this page View Source OnSelectedChanged(bool) Raises the SelectedEvent or UnselectedEvent based on newValue. Called when the IsSelected value is changed. Declaration protected void OnSelectedChanged(bool newValue) Parameters Type Name Description bool newValue True if selected, false otherwise. | Edit this page View Source PopAllStates() Pops all states from the container. Declaration public void PopAllStates() Remarks It doesn't pop the initial state. (see GetInitialState()) | Edit this page View Source PopState() Pops the current State from the stack. Declaration public void PopState() Remarks It doesn't pop the initial state. (see GetInitialState()) Calls Exit() on the current state. Calls ReEnter(ContainerState) on the previous state. | Edit this page View Source PushState(ContainerState) Pushes the given state to the stack. Declaration public void PushState(ContainerState state) Parameters Type Name Description ContainerState state The new state of the container. Remarks Calls Enter(ContainerState?) on the new state. Events | Edit this page View Source DragCompleted Occurs when this ItemContainer completed the drag operation. Declaration public event DragCompletedEventHandler DragCompleted Event Type Type Description DragCompletedEventHandler | Edit this page View Source DragDelta Occurs when this ItemContainer is being dragged. Declaration public event DragDeltaEventHandler DragDelta Event Type Type Description DragDeltaEventHandler | Edit this page View Source DragStarted Occurs when this ItemContainer is the instigator of a drag operation. Declaration public event DragStartedEventHandler DragStarted Event Type Type Description DragStartedEventHandler | Edit this page View Source LocationChanged Occurs when the Location of this ItemContainer is changed. Declaration public event RoutedEventHandler LocationChanged Event Type Type Description RoutedEventHandler | Edit this page View Source PreviewLocationChanged Occurs when the ItemContainer is previewing a new location. Declaration public event PreviewLocationChanged? PreviewLocationChanged Event Type Type Description PreviewLocationChanged | Edit this page View Source Selected Occurs when this ItemContainer is selected. Declaration public event RoutedEventHandler Selected Event Type Type Description RoutedEventHandler | Edit this page View Source Unselected Occurs when this ItemContainer is unselected. Declaration public event RoutedEventHandler Unselected Event Type Type Description RoutedEventHandler Implements INodifyCanvasItem"
  },
  "api/Nodify.KnotNode.html": {
    "href": "api/Nodify.KnotNode.html",
    "title": "Class KnotNode | Nodify-Docs",
    "keywords": "Class KnotNode Represents a control that owns a Connector. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl KnotNode Namespace: Nodify Assembly: Nodify.dll Syntax public class KnotNode : ContentControl"
  },
  "api/Nodify.LineConnection.html": {
    "href": "api/Nodify.LineConnection.html",
    "title": "Class LineConnection | Nodify-Docs",
    "keywords": "Class LineConnection Represents a line that has an arrow indicating its Direction. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Shape BaseConnection LineConnection CircuitConnection Inherited Members BaseConnection.SourceProperty BaseConnection.TargetProperty BaseConnection.SourceOffsetProperty BaseConnection.TargetOffsetProperty BaseConnection.SourceOffsetModeProperty BaseConnection.TargetOffsetModeProperty BaseConnection.SourceOrientationProperty BaseConnection.TargetOrientationProperty BaseConnection.DirectionProperty BaseConnection.DirectionalArrowsCountProperty BaseConnection.DirectionalArrowsOffsetProperty BaseConnection.SpacingProperty BaseConnection.ArrowSizeProperty BaseConnection.ArrowEndsProperty BaseConnection.ArrowShapeProperty BaseConnection.SplitCommandProperty BaseConnection.DisconnectCommandProperty BaseConnection.ForegroundProperty BaseConnection.TextProperty BaseConnection.FontSizeProperty BaseConnection.FontFamilyProperty BaseConnection.FontWeightProperty BaseConnection.FontStyleProperty BaseConnection.FontStretchProperty BaseConnection.Source BaseConnection.Target BaseConnection.SourceOffset BaseConnection.TargetOffset BaseConnection.SourceOffsetMode BaseConnection.TargetOffsetMode BaseConnection.SourceOrientation BaseConnection.TargetOrientation BaseConnection.Direction BaseConnection.DirectionalArrowsCount BaseConnection.DirectionalArrowsOffset BaseConnection.ArrowEnds BaseConnection.ArrowShape BaseConnection.Spacing BaseConnection.ArrowSize BaseConnection.SplitCommand BaseConnection.DisconnectCommand BaseConnection.Foreground BaseConnection.Text BaseConnection.FontSize BaseConnection.FontFamily BaseConnection.FontStyle BaseConnection.FontWeight BaseConnection.FontStretch BaseConnection.DisconnectEvent BaseConnection.SplitEvent BaseConnection.Disconnect BaseConnection.Split BaseConnection.ZeroVector BaseConnection.DefiningGeometry BaseConnection.DrawDirectionalArrowheadGeometry(StreamGeometryContext, Vector, Point) BaseConnection.DrawArrowGeometry(StreamGeometryContext, Point, Point, ConnectionDirection, ArrowHeadShape, Orientation) BaseConnection.DrawRectangleArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) BaseConnection.DrawEllipseArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) BaseConnection.GetOffset() BaseConnection.GetTextPosition(FormattedText, Point, Point) BaseConnection.StartAnimation(double) BaseConnection.StopAnimation() BaseConnection.OnMouseDown(MouseButtonEventArgs) BaseConnection.OnMouseUp(MouseButtonEventArgs) BaseConnection.OnRender(DrawingContext) Namespace: Nodify Assembly: Nodify.dll Syntax public class LineConnection : BaseConnection Methods | Edit this page View Source DrawDefaultArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) Declaration protected override void DrawDefaultArrowhead(StreamGeometryContext context, Point source, Point target, ConnectionDirection arrowDirection = ConnectionDirection.Forward, Orientation orientation = Orientation.Horizontal) Parameters Type Name Description StreamGeometryContext context Point source Point target ConnectionDirection arrowDirection Orientation orientation Overrides BaseConnection.DrawDefaultArrowhead(StreamGeometryContext, Point, Point, ConnectionDirection, Orientation) | Edit this page View Source DrawDirectionalArrowsGeometry(StreamGeometryContext, Point, Point) Declaration protected override void DrawDirectionalArrowsGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target Overrides BaseConnection.DrawDirectionalArrowsGeometry(StreamGeometryContext, Point, Point) | Edit this page View Source DrawLineGeometry(StreamGeometryContext, Point, Point) Declaration protected override ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) DrawLineGeometry(StreamGeometryContext context, Point source, Point target) Parameters Type Name Description StreamGeometryContext context Point source Point target Returns Type Description ((Point ArrowStartSource, Point ArrowStartTarget), (Point ArrowEndSource, Point ArrowEndTarget)) Overrides BaseConnection.DrawLineGeometry(StreamGeometryContext, Point, Point) | Edit this page View Source InterpolateLineSegment(Point, Point, double) Declaration protected static Point InterpolateLineSegment(Point p0, Point p1, double t) Parameters Type Name Description Point p0 Point p1 double t Returns Type Description Point"
  },
  "api/Nodify.MultiGesture.Match.html": {
    "href": "api/Nodify.MultiGesture.Match.html",
    "title": "Enum MultiGesture.Match | Nodify-Docs",
    "keywords": "Enum MultiGesture.Match The strategy used by Matches(object, InputEventArgs). Namespace: Nodify Assembly: Nodify.dll Syntax public enum MultiGesture.Match Fields Name Description All All gestures must match. Any At least one gesture must match."
  },
  "api/Nodify.MultiGesture.html": {
    "href": "api/Nodify.MultiGesture.html",
    "title": "Class MultiGesture | Nodify-Docs",
    "keywords": "Class MultiGesture Combines multiple input gestures. Inheritance object InputGesture MultiGesture AllGestures AnyGesture Namespace: Nodify Assembly: Nodify.dll Syntax public class MultiGesture : InputGesture Constructors | Edit this page View Source MultiGesture(Match, params InputGesture[]) Constructs an instance of a MultiGesture. Declaration public MultiGesture(MultiGesture.Match match, params InputGesture[] gestures) Parameters Type Name Description MultiGesture.Match match The matching strategy. InputGesture[] gestures The input gestures. Fields | Edit this page View Source None Declaration public static readonly MultiGesture None Field Value Type Description MultiGesture Methods | Edit this page View Source Matches(object, InputEventArgs) When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object. Declaration public override bool Matches(object targetElement, InputEventArgs inputEventArgs) Parameters Type Name Description object targetElement The target of the command. InputEventArgs inputEventArgs The input event data to compare this gesture to. Returns Type Description bool true if the gesture matches the input; otherwise, false. Overrides InputGesture.Matches(object, InputEventArgs)"
  },
  "api/Nodify.Node.html": {
    "href": "api/Nodify.Node.html",
    "title": "Class Node | Nodify-Docs",
    "keywords": "Class Node Represents a control that has a list of InputConnectors and a list of OutputConnectors. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl HeaderedContentControl Node Namespace: Nodify Assembly: Nodify.dll Syntax public class Node : HeaderedContentControl Fields | Edit this page View Source ContentBrushProperty Declaration public static readonly DependencyProperty ContentBrushProperty Field Value Type Description DependencyProperty | Edit this page View Source FooterBrushProperty Declaration public static readonly DependencyProperty FooterBrushProperty Field Value Type Description DependencyProperty | Edit this page View Source FooterProperty Declaration public static readonly DependencyProperty FooterProperty Field Value Type Description DependencyProperty | Edit this page View Source FooterTemplateProperty Declaration public static readonly DependencyProperty FooterTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source HasFooterProperty Declaration public static readonly DependencyProperty HasFooterProperty Field Value Type Description DependencyProperty | Edit this page View Source HasFooterPropertyKey Declaration protected static readonly DependencyPropertyKey HasFooterPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source HeaderBrushProperty Declaration public static readonly DependencyProperty HeaderBrushProperty Field Value Type Description DependencyProperty | Edit this page View Source InputConnectorTemplateProperty Declaration public static readonly DependencyProperty InputConnectorTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source InputProperty Declaration public static readonly DependencyProperty InputProperty Field Value Type Description DependencyProperty | Edit this page View Source OutputConnectorTemplateProperty Declaration public static readonly DependencyProperty OutputConnectorTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source OutputProperty Declaration public static readonly DependencyProperty OutputProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source ContentBrush Gets or sets the brush used for the background of the Content of this Node. Declaration public Brush ContentBrush { get; set; } Property Value Type Description Brush | Edit this page View Source Footer Gets or sets the data for the footer of this control. Declaration public object Footer { get; set; } Property Value Type Description object | Edit this page View Source FooterBrush Gets or sets the brush used for the background of the Footer of this Node. Declaration public Brush FooterBrush { get; set; } Property Value Type Description Brush | Edit this page View Source FooterTemplate Gets or sets the template used to display the content of the control's footer. Declaration public DataTemplate FooterTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source HasFooter Gets a value that indicates whether the Footer is null. Declaration public bool HasFooter { get; } Property Value Type Description bool | Edit this page View Source HeaderBrush Gets or sets the brush used for the background of the Header of this Node. Declaration public Brush HeaderBrush { get; set; } Property Value Type Description Brush | Edit this page View Source Input Gets or sets the data for the input Connectors of this control. Declaration public IEnumerable Input { get; set; } Property Value Type Description IEnumerable | Edit this page View Source InputConnectorTemplate Gets or sets the template used to display the content of the control's Input connectors. Declaration public DataTemplate InputConnectorTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source Output Gets or sets the data for the output Connectors of this control. Declaration public IEnumerable Output { get; set; } Property Value Type Description IEnumerable | Edit this page View Source OutputConnectorTemplate Gets or sets the template used to display the content of the control's Output connectors. Declaration public DataTemplate OutputConnectorTemplate { get; set; } Property Value Type Description DataTemplate"
  },
  "api/Nodify.NodeInput.html": {
    "href": "api/Nodify.NodeInput.html",
    "title": "Class NodeInput | Nodify-Docs",
    "keywords": "Class NodeInput Represents the default control for the InputConnectorTemplate. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control Connector NodeInput Inherited Members Connector.ElementConnector Connector.PendingConnectionStartedEvent Connector.PendingConnectionCompletedEvent Connector.PendingConnectionDragEvent Connector.DisconnectEvent Connector.PendingConnectionStarted Connector.PendingConnectionCompleted Connector.PendingConnectionDrag Connector.Disconnect Connector.AnchorProperty Connector.IsConnectedProperty Connector.DisconnectCommandProperty Connector.IsPendingConnectionProperty Connector.Anchor Connector.IsConnected Connector.IsPendingConnection Connector.DisconnectCommand Connector.Thumb Connector.Container Connector.Editor Connector.OptimizeSafeZone Connector.OptimizeMinimumSelectedItems Connector.EnableOptimizations Connector.AllowPendingConnectionCancellation Connector.EnableStickyConnections Connector.OnApplyTemplate() Connector.OnRenderSizeChanged(SizeChangedInfo) Connector.UpdateAnchorOptimized(Point) Connector.UpdateAnchor(Point) Connector.UpdateAnchor() Connector.OnLostMouseCapture(MouseEventArgs) Connector.OnMouseDown(MouseButtonEventArgs) Connector.OnMouseUp(MouseButtonEventArgs) Connector.OnKeyUp(KeyEventArgs) Connector.OnMouseMove(MouseEventArgs) Connector.OnConnectorDrag(Vector) Connector.OnConnectorDragStarted() Connector.OnConnectorDragCompleted(bool) Connector.OnDisconnect() Namespace: Nodify Assembly: Nodify.dll Syntax public class NodeInput : Connector Fields | Edit this page View Source ConnectorTemplateProperty Declaration public static readonly DependencyProperty ConnectorTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source HeaderProperty Declaration public static readonly DependencyProperty HeaderProperty Field Value Type Description DependencyProperty | Edit this page View Source HeaderTemplateProperty Declaration public static readonly DependencyProperty HeaderTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source OrientationProperty Declaration public static readonly DependencyProperty OrientationProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source ConnectorTemplate Gets or sets the template used to display the connecting point of this Connector. Declaration public ControlTemplate ConnectorTemplate { get; set; } Property Value Type Description ControlTemplate | Edit this page View Source Header Gets of sets the data used for the control's header. Declaration public object Header { get; set; } Property Value Type Description object | Edit this page View Source HeaderTemplate Gets or sets the template used to display the content of the control's header. Declaration public DataTemplate HeaderTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source Orientation Gets or sets a value that indicates the dimension by which child elements are stacked. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation The Orientation of child content."
  },
  "api/Nodify.NodeOutput.html": {
    "href": "api/Nodify.NodeOutput.html",
    "title": "Class NodeOutput | Nodify-Docs",
    "keywords": "Class NodeOutput Represents the default control for the OutputConnectorTemplate. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control Connector NodeOutput Inherited Members Connector.ElementConnector Connector.PendingConnectionStartedEvent Connector.PendingConnectionCompletedEvent Connector.PendingConnectionDragEvent Connector.DisconnectEvent Connector.PendingConnectionStarted Connector.PendingConnectionCompleted Connector.PendingConnectionDrag Connector.Disconnect Connector.AnchorProperty Connector.IsConnectedProperty Connector.DisconnectCommandProperty Connector.IsPendingConnectionProperty Connector.Anchor Connector.IsConnected Connector.IsPendingConnection Connector.DisconnectCommand Connector.Thumb Connector.Container Connector.Editor Connector.OptimizeSafeZone Connector.OptimizeMinimumSelectedItems Connector.EnableOptimizations Connector.AllowPendingConnectionCancellation Connector.EnableStickyConnections Connector.OnApplyTemplate() Connector.OnRenderSizeChanged(SizeChangedInfo) Connector.UpdateAnchorOptimized(Point) Connector.UpdateAnchor(Point) Connector.UpdateAnchor() Connector.OnLostMouseCapture(MouseEventArgs) Connector.OnMouseDown(MouseButtonEventArgs) Connector.OnMouseUp(MouseButtonEventArgs) Connector.OnKeyUp(KeyEventArgs) Connector.OnMouseMove(MouseEventArgs) Connector.OnConnectorDrag(Vector) Connector.OnConnectorDragStarted() Connector.OnConnectorDragCompleted(bool) Connector.OnDisconnect() Namespace: Nodify Assembly: Nodify.dll Syntax public class NodeOutput : Connector Fields | Edit this page View Source ConnectorTemplateProperty Declaration public static readonly DependencyProperty ConnectorTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source HeaderProperty Declaration public static readonly DependencyProperty HeaderProperty Field Value Type Description DependencyProperty | Edit this page View Source HeaderTemplateProperty Declaration public static readonly DependencyProperty HeaderTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source OrientationProperty Declaration public static readonly DependencyProperty OrientationProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source ConnectorTemplate Gets or sets the template used to display the connecting point of this Connector. Declaration public ControlTemplate ConnectorTemplate { get; set; } Property Value Type Description ControlTemplate | Edit this page View Source Header Gets of sets the data used for the control's header. Declaration public object Header { get; set; } Property Value Type Description object | Edit this page View Source HeaderTemplate Gets or sets the template used to display the content of the control's header. Declaration public DataTemplate HeaderTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source Orientation Gets or sets a value that indicates the dimension by which child elements are stacked. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation The Orientation of child content."
  },
  "api/Nodify.NodifyCanvas.html": {
    "href": "api/Nodify.NodifyCanvas.html",
    "title": "Class NodifyCanvas | Nodify-Docs",
    "keywords": "Class NodifyCanvas A canvas like panel that works with INodifyCanvasItems. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel NodifyCanvas Namespace: Nodify Assembly: Nodify.dll Syntax public class NodifyCanvas : Panel Fields | Edit this page View Source ExtentProperty Declaration public static readonly DependencyProperty ExtentProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source Extent The area covered by the children of this panel. Declaration public Rect Extent { get; set; } Property Value Type Description Rect Methods | Edit this page View Source ArrangeOverride(Size) When overridden in a derived class, positions child elements and determines a size for a FrameworkElement derived class. Declaration protected override Size ArrangeOverride(Size arrangeSize) Parameters Type Name Description Size arrangeSize Returns Type Description Size The actual size used. Overrides FrameworkElement.ArrangeOverride(Size) | Edit this page View Source MeasureOverride(Size) When overridden in a derived class, measures the size in layout required for child elements and determines a size for the FrameworkElement-derived class. Declaration protected override Size MeasureOverride(Size constraint) Parameters Type Name Description Size constraint Returns Type Description Size The size that this element determines it needs during layout, based on its calculations of child element sizes. Overrides FrameworkElement.MeasureOverride(Size)"
  },
  "api/Nodify.NodifyEditor.html": {
    "href": "api/Nodify.NodifyEditor.html",
    "title": "Class NodifyEditor | Nodify-Docs",
    "keywords": "Class NodifyEditor Groups ItemContainers and Connections in an area that you can drag, zoom and select. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ItemsControl Selector MultiSelector NodifyEditor Namespace: Nodify Assembly: Nodify.dll Syntax [TemplatePart(Name = \"PART_ItemsHost\", Type = typeof(Panel))] [StyleTypedProperty(Property = \"ItemContainerStyle\", StyleTargetType = typeof(ItemContainer))] [StyleTypedProperty(Property = \"DecoratorContainerStyle\", StyleTargetType = typeof(DecoratorContainer))] [StyleTypedProperty(Property = \"SelectionRectangleStyle\", StyleTargetType = typeof(Rectangle))] public class NodifyEditor : MultiSelector Constructors | Edit this page View Source NodifyEditor() Initializes a new instance of the NodifyEditor class. Declaration public NodifyEditor() Fields | Edit this page View Source AutoPanEdgeDistanceProperty Declaration public static readonly DependencyProperty AutoPanEdgeDistanceProperty Field Value Type Description DependencyProperty | Edit this page View Source AutoPanSpeedProperty Declaration public static readonly DependencyProperty AutoPanSpeedProperty Field Value Type Description DependencyProperty | Edit this page View Source BringIntoViewMaxDurationProperty Declaration public static readonly DependencyProperty BringIntoViewMaxDurationProperty Field Value Type Description DependencyProperty | Edit this page View Source BringIntoViewSpeedProperty Declaration public static readonly DependencyProperty BringIntoViewSpeedProperty Field Value Type Description DependencyProperty | Edit this page View Source ConnectionCompletedCommandProperty Declaration public static readonly DependencyProperty ConnectionCompletedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ConnectionStartedCommandProperty Declaration public static readonly DependencyProperty ConnectionStartedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ConnectionTemplateProperty Declaration public static readonly DependencyProperty ConnectionTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source ConnectionsProperty Declaration public static readonly DependencyProperty ConnectionsProperty Field Value Type Description DependencyProperty | Edit this page View Source DecoratorContainerStyleProperty Declaration public static readonly DependencyProperty DecoratorContainerStyleProperty Field Value Type Description DependencyProperty | Edit this page View Source DecoratorTemplateProperty Declaration public static readonly DependencyProperty DecoratorTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source DecoratorsExtentProperty Declaration public static readonly DependencyProperty DecoratorsExtentProperty Field Value Type Description DependencyProperty | Edit this page View Source DecoratorsProperty Declaration public static readonly DependencyProperty DecoratorsProperty Field Value Type Description DependencyProperty | Edit this page View Source DisableAutoPanningProperty Declaration public static readonly DependencyProperty DisableAutoPanningProperty Field Value Type Description DependencyProperty | Edit this page View Source DisablePanningProperty Declaration public static readonly DependencyProperty DisablePanningProperty Field Value Type Description DependencyProperty | Edit this page View Source DisableZoomingProperty Declaration public static readonly DependencyProperty DisableZoomingProperty Field Value Type Description DependencyProperty | Edit this page View Source DisconnectConnectorCommandProperty Declaration public static readonly DependencyProperty DisconnectConnectorCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source DisplayConnectionsOnTopProperty Declaration public static readonly DependencyProperty DisplayConnectionsOnTopProperty Field Value Type Description DependencyProperty | Edit this page View Source ElementItemsHost Declaration protected const string ElementItemsHost = \"PART_ItemsHost\" Field Value Type Description string | Edit this page View Source EnableRealtimeSelectionProperty Declaration public static readonly DependencyProperty EnableRealtimeSelectionProperty Field Value Type Description DependencyProperty | Edit this page View Source GridCellSizeProperty Declaration public static readonly DependencyProperty GridCellSizeProperty Field Value Type Description DependencyProperty | Edit this page View Source IsPanningProperty Declaration public static readonly DependencyProperty IsPanningProperty Field Value Type Description DependencyProperty | Edit this page View Source IsPanningPropertyKey Declaration public static readonly DependencyPropertyKey IsPanningPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source IsSelectingProperty Declaration public static readonly DependencyProperty IsSelectingProperty Field Value Type Description DependencyProperty | Edit this page View Source IsSelectingPropertyKey Declaration protected static readonly DependencyPropertyKey IsSelectingPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source ItemsDragCompletedCommandProperty Declaration public static readonly DependencyProperty ItemsDragCompletedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ItemsDragStartedCommandProperty Declaration public static readonly DependencyProperty ItemsDragStartedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ItemsExtentProperty Declaration public static readonly DependencyProperty ItemsExtentProperty Field Value Type Description DependencyProperty | Edit this page View Source ItemsSelectCompletedCommandProperty Declaration public static readonly DependencyProperty ItemsSelectCompletedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ItemsSelectStartedCommandProperty Declaration public static readonly DependencyProperty ItemsSelectStartedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source MaxViewportZoomProperty Declaration public static readonly DependencyProperty MaxViewportZoomProperty Field Value Type Description DependencyProperty | Edit this page View Source MinViewportZoomProperty Declaration public static readonly DependencyProperty MinViewportZoomProperty Field Value Type Description DependencyProperty | Edit this page View Source MouseLocationProperty Declaration public static readonly DependencyProperty MouseLocationProperty Field Value Type Description DependencyProperty | Edit this page View Source MouseLocationPropertyKey Declaration protected static readonly DependencyPropertyKey MouseLocationPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source PendingConnectionProperty Declaration public static readonly DependencyProperty PendingConnectionProperty Field Value Type Description DependencyProperty | Edit this page View Source PendingConnectionTemplateProperty Declaration public static readonly DependencyProperty PendingConnectionTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source RemoveConnectionCommandProperty Declaration public static readonly DependencyProperty RemoveConnectionCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source ScaleTransform Gets the transform used to zoom on the viewport. Declaration protected readonly ScaleTransform ScaleTransform Field Value Type Description ScaleTransform | Edit this page View Source SelectedAreaProperty Declaration public static readonly DependencyProperty SelectedAreaProperty Field Value Type Description DependencyProperty | Edit this page View Source SelectedAreaPropertyKey Declaration protected static readonly DependencyPropertyKey SelectedAreaPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source SelectedItemsProperty Declaration public static readonly DependencyProperty SelectedItemsProperty Field Value Type Description DependencyProperty | Edit this page View Source SelectionRectangleStyleProperty Declaration public static readonly DependencyProperty SelectionRectangleStyleProperty Field Value Type Description DependencyProperty | Edit this page View Source TranslateTransform Gets the transform used to offset the viewport. Declaration protected readonly TranslateTransform TranslateTransform Field Value Type Description TranslateTransform | Edit this page View Source ViewportLocationProperty Declaration public static readonly DependencyProperty ViewportLocationProperty Field Value Type Description DependencyProperty | Edit this page View Source ViewportSizeProperty Declaration public static readonly DependencyProperty ViewportSizeProperty Field Value Type Description DependencyProperty | Edit this page View Source ViewportTransformProperty Declaration public static readonly DependencyProperty ViewportTransformProperty Field Value Type Description DependencyProperty | Edit this page View Source ViewportTransformPropertyKey Declaration protected static readonly DependencyPropertyKey ViewportTransformPropertyKey Field Value Type Description DependencyPropertyKey | Edit this page View Source ViewportUpdatedEvent Declaration public static readonly RoutedEvent ViewportUpdatedEvent Field Value Type Description RoutedEvent | Edit this page View Source ViewportZoomProperty Declaration public static readonly DependencyProperty ViewportZoomProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source AutoPanEdgeDistance Gets or sets the maximum distance in pixels from the edge of the editor that will trigger auto-panning. Declaration public double AutoPanEdgeDistance { get; set; } Property Value Type Description double | Edit this page View Source AutoPanSpeed Gets or sets the speed used when auto-panning scaled by AutoPanningTickRate Declaration public double AutoPanSpeed { get; set; } Property Value Type Description double | Edit this page View Source AutoPanningTickRate Gets or sets how often the new ViewportLocation is calculated in milliseconds when DisableAutoPanning is false. Declaration public static double AutoPanningTickRate { get; set; } Property Value Type Description double | Edit this page View Source BringIntoViewMaxDuration Gets or sets the maximum animation duration in seconds for bringing a location into view. Declaration public double BringIntoViewMaxDuration { get; set; } Property Value Type Description double | Edit this page View Source BringIntoViewSpeed Gets or sets the animation speed in pixels per second for bringing a location into view. Declaration public double BringIntoViewSpeed { get; set; } Property Value Type Description double Remarks Total animation duration is calculated based on distance and clamped between 0.1 and BringIntoViewMaxDuration. | Edit this page View Source ConnectionCompletedCommand Invoked when the PendingConnection is completed. Use CompletedCommand if you want to control the visibility of the connection from the viewmodel. Parameter is Tuple<T1, T2> where Item1 is the Source and Item2 is Target. Declaration public ICommand? ConnectionCompletedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source ConnectionStartedCommand Invoked when the PendingConnection is completed. Use StartedCommand if you want to control the visibility of the connection from the viewmodel. Parameter is Source. Declaration public ICommand? ConnectionStartedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source ConnectionTemplate Gets or sets the DataTemplate to use when generating a new BaseConnection. Declaration public DataTemplate ConnectionTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source Connections Gets or sets the data source that BaseConnections will be generated for. Declaration public IEnumerable Connections { get; set; } Property Value Type Description IEnumerable | Edit this page View Source DecoratorContainerStyle Gets or sets the style to use for the DecoratorContainer. Declaration public Style DecoratorContainerStyle { get; set; } Property Value Type Description Style | Edit this page View Source DecoratorTemplate Gets or sets the DataTemplate to use when generating a new DecoratorContainer. Declaration public DataTemplate DecoratorTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source Decorators Gets or sets the items that will be rendered in the decorators layer via DecoratorContainers. Declaration public IEnumerable Decorators { get; set; } Property Value Type Description IEnumerable | Edit this page View Source DecoratorsExtent The area covered by the DecoratorContainers. Declaration public Rect DecoratorsExtent { get; set; } Property Value Type Description Rect | Edit this page View Source DisableAutoPanning Gets or sets whether to disable the auto panning when selecting or dragging near the edge of the editor configured by AutoPanEdgeDistance. Declaration public bool DisableAutoPanning { get; set; } Property Value Type Description bool | Edit this page View Source DisablePanning Gets or sets whether panning should be disabled. Declaration public bool DisablePanning { get; set; } Property Value Type Description bool | Edit this page View Source DisableZooming Gets or sets whether zooming should be disabled. Declaration public bool DisableZooming { get; set; } Property Value Type Description bool | Edit this page View Source DisconnectConnectorCommand Invoked when the Disconnect event is raised. Can also be handled at the Connector level using the DisconnectCommand command. Parameter is the Connector's DataContext. Declaration public ICommand? DisconnectConnectorCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source DisplayConnectionsOnTop Gets or sets whether to display connections on top of ItemContainers or not. Declaration public bool DisplayConnectionsOnTop { get; set; } Property Value Type Description bool | Edit this page View Source EnableDraggingContainersOptimizations Gets or sets if the current position of containers that are being dragged should not be committed until the end of the dragging operation. Declaration public static bool EnableDraggingContainersOptimizations { get; set; } Property Value Type Description bool | Edit this page View Source EnableRealtimeSelection Enables selecting and deselecting items while the SelectedArea changes. Disable for maximum performance when hundreds of items are generated. Declaration public bool EnableRealtimeSelection { get; set; } Property Value Type Description bool | Edit this page View Source EnableRenderingContainersOptimizations Gets or sets if NodifyEditors should enable optimizations based on OptimizeRenderingMinimumContainers and OptimizeRenderingZoomOutPercent. Declaration public static bool EnableRenderingContainersOptimizations { get; set; } Property Value Type Description bool | Edit this page View Source EnableSnappingCorrection Correct ItemContainer's position after moving if starting position is not snapped to grid. Declaration public static bool EnableSnappingCorrection { get; set; } Property Value Type Description bool | Edit this page View Source FitToScreenExtentMargin Gets or sets the margin to add in all directions to the ItemsExtent or area parameter when using FitToScreen(Rect?). Declaration public static double FitToScreenExtentMargin { get; set; } Property Value Type Description double | Edit this page View Source GridCellSize Gets or sets the value of an invisible grid used to adjust locations (snapping) of ItemContainers. Declaration public uint GridCellSize { get; set; } Property Value Type Description uint | Edit this page View Source HandleRightClickAfterPanningThreshold Gets or sets the maximum number of pixels allowed to move the mouse before cancelling the mouse event. Useful for ContextMenus to appear if mouse only moved a bit or not at all. Declaration public static double HandleRightClickAfterPanningThreshold { get; set; } Property Value Type Description double | Edit this page View Source IsBulkUpdatingItems Tells if the NodifyEditor is doing operations on multiple items at once. Declaration public bool IsBulkUpdatingItems { get; protected set; } Property Value Type Description bool | Edit this page View Source IsPanning Gets a value that indicates whether a panning operation is in progress. Declaration public bool IsPanning { get; protected set; } Property Value Type Description bool | Edit this page View Source IsSelecting Gets a value that indicates whether a selection operation is in progress. Declaration public bool IsSelecting { get; } Property Value Type Description bool | Edit this page View Source ItemsDragCompletedCommand Invoked when a drag operation is completed for the SelectedItems. Declaration public ICommand? ItemsDragCompletedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source ItemsDragStartedCommand Invoked when a drag operation starts for the SelectedItems. Declaration public ICommand? ItemsDragStartedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source ItemsExtent The area covered by the ItemContainers. Declaration public Rect ItemsExtent { get; set; } Property Value Type Description Rect | Edit this page View Source ItemsHost Gets the panel that holds all the ItemContainers. Declaration protected Panel ItemsHost { get; } Property Value Type Description Panel | Edit this page View Source ItemsSelectCompletedCommand Invoked when a selection operation is completed. Declaration public ICommand? ItemsSelectCompletedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source ItemsSelectStartedCommand Invoked when a selection operation is started. Declaration public ICommand? ItemsSelectStartedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source MaxViewportZoom Gets or sets the maximum zoom factor of the viewport Declaration public double MaxViewportZoom { get; set; } Property Value Type Description double | Edit this page View Source MinViewportZoom Gets or sets the minimum zoom factor of the viewport Declaration public double MinViewportZoom { get; set; } Property Value Type Description double | Edit this page View Source MouseLocation Gets the current mouse location in graph space coordinates (relative to the ItemsHost). Declaration public Point MouseLocation { get; protected set; } Property Value Type Description Point | Edit this page View Source OptimizeRenderingMinimumContainers Gets or sets the minimum number of ItemContainers needed to trigger optimizations when reaching the OptimizeRenderingZoomOutPercent. Declaration public static uint OptimizeRenderingMinimumContainers { get; set; } Property Value Type Description uint | Edit this page View Source OptimizeRenderingZoomOutPercent Gets or sets the minimum zoom out percent needed to start optimizing the rendering for ItemContainers. Value is between 0 and 1. Declaration public static double OptimizeRenderingZoomOutPercent { get; set; } Property Value Type Description double | Edit this page View Source PendingConnection Gets of sets the DataContext of the PendingConnection. Declaration public object PendingConnection { get; set; } Property Value Type Description object | Edit this page View Source PendingConnectionTemplate Gets or sets the DataTemplate to use for the PendingConnection. Declaration public DataTemplate PendingConnectionTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source RemoveConnectionCommand Invoked when the Disconnect event is raised. Can also be handled at the BaseConnection level using the DisconnectCommand command. Parameter is the BaseConnection's DataContext. Declaration public ICommand? RemoveConnectionCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source SelectedArea Gets the currently selected area while IsSelecting is true. Declaration public Rect SelectedArea { get; } Property Value Type Description Rect | Edit this page View Source SelectedContainers Gets a list of ItemContainers that are selected. Declaration protected IReadOnlyList<ItemContainer> SelectedContainers { get; } Property Value Type Description IReadOnlyList<ItemContainer> Remarks Cache the result before using it to avoid extra allocations. | Edit this page View Source SelectedItems Gets or sets the items in the NodifyEditor that are selected. Declaration public IList? SelectedItems { get; set; } Property Value Type Description IList | Edit this page View Source SelectionRectangleStyle Gets or sets the style to use for the selection rectangle. Declaration public Style SelectionRectangleStyle { get; set; } Property Value Type Description Style | Edit this page View Source State The current state of the editor. Declaration public EditorState State { get; } Property Value Type Description EditorState | Edit this page View Source ViewportLocation Gets or sets the viewport's top-left coordinates in graph space coordinates. Declaration public Point ViewportLocation { get; set; } Property Value Type Description Point | Edit this page View Source ViewportSize Gets the size of the viewport. Declaration public Size ViewportSize { get; set; } Property Value Type Description Size | Edit this page View Source ViewportTransform Gets the transform that is applied to all child controls. Declaration public Transform ViewportTransform { get; } Property Value Type Description Transform | Edit this page View Source ViewportZoom Gets or sets the zoom factor of the viewport. Declaration public double ViewportZoom { get; set; } Property Value Type Description double Methods | Edit this page View Source BringIntoView(Point, bool, Action?) Moves the viewport center at the specified location. Declaration public void BringIntoView(Point point, bool animated = true, Action? onFinish = null) Parameters Type Name Description Point point The location in graph space coordinates. bool animated True to animate the movement. Action onFinish The callback invoked when movement is finished. Remarks Temporarily disables editor controls when animated. | Edit this page View Source FitToScreen(Rect?) Scales the viewport to fit the specified area or all the ItemContainers if that's possible. Declaration public void FitToScreen(Rect? area = null) Parameters Type Name Description Rect? area Remarks Does nothing if area is null and there's no items. | Edit this page View Source GetContainerForItemOverride() Creates or identifies the element that is used to display the given item. Declaration protected override DependencyObject GetContainerForItemOverride() Returns Type Description DependencyObject The element that is used to display the given item. Overrides ItemsControl.GetContainerForItemOverride() | Edit this page View Source GetInitialState() Creates the initial state of the editor. Declaration protected virtual EditorState GetInitialState() Returns Type Description EditorState The initial state. | Edit this page View Source GetLocationInsideEditor(DragEventArgs) Translates the event location to graph space coordinates (relative to the ItemsHost). Declaration public Point GetLocationInsideEditor(DragEventArgs args) Parameters Type Name Description DragEventArgs args The drag event. Returns Type Description Point A location inside the graph | Edit this page View Source GetLocationInsideEditor(MouseEventArgs) Translates the event location to graph space coordinates (relative to the ItemsHost). Declaration public Point GetLocationInsideEditor(MouseEventArgs args) Parameters Type Name Description MouseEventArgs args The mouse event. Returns Type Description Point A location inside the graph | Edit this page View Source GetLocationInsideEditor(Point, UIElement) Translates the specified location to graph space coordinates (relative to the ItemsHost). Declaration public Point GetLocationInsideEditor(Point location, UIElement relativeTo) Parameters Type Name Description Point location The location coordinates relative to relativeTo UIElement relativeTo The element where the location was calculated from. Returns Type Description Point A location inside the graph. | Edit this page View Source InvertSelection(Rect, bool) Inverts the ItemContainers selection in the specified area. Declaration public void InvertSelection(Rect area, bool fit = false) Parameters Type Name Description Rect area The area to look for ItemContainers. bool fit True to check if the area contains the ItemContainer. False to check if area intersects the ItemContainer. | Edit this page View Source IsItemItsOwnContainerOverride(object) Determines if the specified item is (or is eligible to be) its own container. Declaration protected override bool IsItemItsOwnContainerOverride(object item) Parameters Type Name Description object item The item to check. Returns Type Description bool true if the item is (or is eligible to be) its own container; otherwise, false. Overrides ItemsControl.IsItemItsOwnContainerOverride(object) | Edit this page View Source OnApplyTemplate() When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate(). Declaration public override void OnApplyTemplate() Overrides FrameworkElement.OnApplyTemplate() | Edit this page View Source OnDisableAutoPanningChanged(bool) Called when the DisableAutoPanning changes. Declaration protected virtual void OnDisableAutoPanningChanged(bool shouldDisable) Parameters Type Name Description bool shouldDisable Whether to enable or disable auto panning. | Edit this page View Source OnKeyDown(KeyEventArgs) Invoked when the KeyDown event is received. Declaration protected override void OnKeyDown(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e Information about the event. Overrides ItemsControl.OnKeyDown(KeyEventArgs) | Edit this page View Source OnKeyUp(KeyEventArgs) Invoked when an unhandled System.Windows.Input.Keyboard.KeyUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e The KeyEventArgs that contains the event data. Overrides UIElement.OnKeyUp(KeyEventArgs) | Edit this page View Source OnLostMouseCapture(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.LostMouseCapture attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnLostMouseCapture(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains event data. Overrides UIElement.OnLostMouseCapture(MouseEventArgs) | Edit this page View Source OnMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides UIElement.OnMouseDown(MouseButtonEventArgs) | Edit this page View Source OnMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e The MouseEventArgs that contains the event data. Overrides UIElement.OnMouseMove(MouseEventArgs) | Edit this page View Source OnMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. Overrides UIElement.OnMouseUp(MouseButtonEventArgs) | Edit this page View Source OnMouseWheel(MouseWheelEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseWheel attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseWheel(MouseWheelEventArgs e) Parameters Type Name Description MouseWheelEventArgs e The MouseWheelEventArgs that contains the event data. Overrides UIElement.OnMouseWheel(MouseWheelEventArgs) | Edit this page View Source OnRenderSizeChanged(SizeChangedInfo) Raises the SizeChanged event, using the specified information as part of the eventual event data. Declaration protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo) Parameters Type Name Description SizeChangedInfo sizeInfo Details of the old and new size involved in the change. Overrides FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) | Edit this page View Source OnSelectionChanged(SelectionChangedEventArgs) Called when the selection changes. Declaration protected override void OnSelectionChanged(SelectionChangedEventArgs e) Parameters Type Name Description SelectionChangedEventArgs e The event data. Overrides Selector.OnSelectionChanged(SelectionChangedEventArgs) | Edit this page View Source OnViewportUpdated() Updates the ViewportSize and raises the ViewportUpdatedEvent. Called when the RenderSize or ViewportZoom is changed. Declaration protected void OnViewportUpdated() | Edit this page View Source PopAllStates() Pops all states from the editor. Declaration public void PopAllStates() Remarks It doesn't pop the initial state. (see GetInitialState()) | Edit this page View Source PopState() Pops the current State from the stack. Declaration public void PopState() Remarks It doesn't pop the initial state. (see GetInitialState()) Calls Exit() on the current state. Calls ReEnter(EditorState) on the previous state. | Edit this page View Source PushState(EditorState) Pushes the given state to the stack. Declaration public void PushState(EditorState state) Parameters Type Name Description EditorState state The new state of the editor. Remarks Calls Enter(EditorState?) on the new state. | Edit this page View Source SelectArea(Rect, bool, bool) Selects the ItemContainers in the specified area. Declaration public void SelectArea(Rect area, bool append = false, bool fit = false) Parameters Type Name Description Rect area The area to look for ItemContainers. bool append If true, it will add to the existing selection. bool fit True to check if the area contains the ItemContainer. False to check if area intersects the ItemContainer. | Edit this page View Source UnselectArea(Rect, bool) Unselect the ItemContainers in the specified area. Declaration public void UnselectArea(Rect area, bool fit = false) Parameters Type Name Description Rect area The area to look for ItemContainers. bool fit True to check if the area contains the ItemContainer. False to check if area intersects the ItemContainer. | Edit this page View Source ZoomAtPosition(double, Point) Zoom at the specified location in graph space coordinates. Declaration public void ZoomAtPosition(double zoom, Point location) Parameters Type Name Description double zoom The zoom factor. Point location The location to focus when zooming. | Edit this page View Source ZoomIn() Zoom in at the viewports center Declaration public void ZoomIn() | Edit this page View Source ZoomOut() Zoom out at the viewports center Declaration public void ZoomOut() Events | Edit this page View Source ViewportUpdated Occurs whenever the viewport updates. Declaration public event RoutedEventHandler ViewportUpdated Event Type Type Description RoutedEventHandler"
  },
  "api/Nodify.PendingConnection.html": {
    "href": "api/Nodify.PendingConnection.html",
    "title": "Class PendingConnection | Nodify-Docs",
    "keywords": "Class PendingConnection Represents a pending connection usually started by a Connector which invokes the CompletedCommand when completed. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl PendingConnection Namespace: Nodify Assembly: Nodify.dll Syntax public class PendingConnection : ContentControl Fields | Edit this page View Source AllowOnlyConnectorsProperty Declaration public static readonly DependencyProperty AllowOnlyConnectorsProperty Field Value Type Description DependencyProperty | Edit this page View Source CompletedCommandProperty Declaration public static readonly DependencyProperty CompletedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source DirectionProperty Declaration public static readonly DependencyProperty DirectionProperty Field Value Type Description DependencyProperty | Edit this page View Source EnablePreviewProperty Declaration public static readonly DependencyProperty EnablePreviewProperty Field Value Type Description DependencyProperty | Edit this page View Source EnableSnappingProperty Declaration public static readonly DependencyProperty EnableSnappingProperty Field Value Type Description DependencyProperty | Edit this page View Source IsOverElementProperty Will be set for Connectors and ItemContainers when the pending connection is over the element if EnablePreview or EnableSnapping is true. Declaration public static readonly DependencyProperty IsOverElementProperty Field Value Type Description DependencyProperty | Edit this page View Source IsVisibleProperty Declaration public static readonly DependencyProperty IsVisibleProperty Field Value Type Description DependencyProperty | Edit this page View Source PreviewTargetProperty Declaration public static readonly DependencyProperty PreviewTargetProperty Field Value Type Description DependencyProperty | Edit this page View Source SourceAnchorProperty Declaration public static readonly DependencyProperty SourceAnchorProperty Field Value Type Description DependencyProperty | Edit this page View Source SourceProperty Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty | Edit this page View Source StartedCommandProperty Declaration public static readonly DependencyProperty StartedCommandProperty Field Value Type Description DependencyProperty | Edit this page View Source StrokeDashArrayProperty Declaration public static readonly DependencyProperty StrokeDashArrayProperty Field Value Type Description DependencyProperty | Edit this page View Source StrokeProperty Declaration public static readonly DependencyProperty StrokeProperty Field Value Type Description DependencyProperty | Edit this page View Source StrokeThicknessProperty Declaration public static readonly DependencyProperty StrokeThicknessProperty Field Value Type Description DependencyProperty | Edit this page View Source TargetAnchorProperty Declaration public static readonly DependencyProperty TargetAnchorProperty Field Value Type Description DependencyProperty | Edit this page View Source TargetProperty Declaration public static readonly DependencyProperty TargetProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source AllowOnlyConnectors If true will preview and connect only to Connectors, otherwise will also enable ItemContainers. Declaration public bool AllowOnlyConnectors { get; set; } Property Value Type Description bool | Edit this page View Source CompletedCommand Gets or sets the command to invoke when the pending connection is completed. Will not be invoked if ConnectionCompletedCommand is used. Target will be set to the desired Connector's DataContext and will also be the command's parameter. Declaration public ICommand? CompletedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source Direction Gets or sets the direction of this connection. Declaration public ConnectionDirection Direction { get; set; } Property Value Type Description ConnectionDirection | Edit this page View Source Editor Gets the NodifyEditor that owns this PendingConnection. Declaration protected NodifyEditor? Editor { get; } Property Value Type Description NodifyEditor | Edit this page View Source EnablePreview PreviewTarget will be updated with a potential Connector's DataContext if this is true. Declaration public bool EnablePreview { get; set; } Property Value Type Description bool | Edit this page View Source EnableSnapping Enables snapping the TargetAnchor to a possible Target connector. Declaration public bool EnableSnapping { get; set; } Property Value Type Description bool | Edit this page View Source IsVisible Gets or sets the visibility of the connection. Declaration public bool IsVisible { get; set; } Property Value Type Description bool | Edit this page View Source PreviewTarget Gets or sets the Connector or the ItemContainer (if AllowOnlyConnectors is false) that we're previewing. Declaration public object? PreviewTarget { get; set; } Property Value Type Description object | Edit this page View Source Source Gets or sets the Connector's DataContext that started this pending connection. Declaration public object? Source { get; set; } Property Value Type Description object | Edit this page View Source SourceAnchor Gets or sets the starting point for the connection. Declaration public Point SourceAnchor { get; set; } Property Value Type Description Point | Edit this page View Source StartedCommand Gets or sets the command to invoke when the pending connection is started. Will not be invoked if ConnectionStartedCommand is used. Source will be set to the Connector's DataContext that started this connection and will also be the command's parameter. Declaration public ICommand? StartedCommand { get; set; } Property Value Type Description ICommand | Edit this page View Source Stroke Gets or sets the stroke color of the connection. Declaration public Brush Stroke { get; set; } Property Value Type Description Brush | Edit this page View Source StrokeDashArray Gets or sets the pattern of dashes and gaps that is used to outline the connection. Declaration public DoubleCollection StrokeDashArray { get; set; } Property Value Type Description DoubleCollection | Edit this page View Source StrokeThickness Gets or set the connection thickness. Declaration public double StrokeThickness { get; set; } Property Value Type Description double | Edit this page View Source Target Gets or sets the Connector's DataContext (or potentially an ItemContainer's DataContext if AllowOnlyConnectors is false) that the Source can connect to. Only set when the connection is completed (see CompletedCommand). Declaration public object? Target { get; set; } Property Value Type Description object | Edit this page View Source TargetAnchor Gets or sets the end point for the connection. Declaration public Point TargetAnchor { get; set; } Property Value Type Description Point Methods | Edit this page View Source GetIsOverElement(UIElement) Declaration public static bool GetIsOverElement(UIElement elem) Parameters Type Name Description UIElement elem Returns Type Description bool | Edit this page View Source OnApplyTemplate() When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate(). Declaration public override void OnApplyTemplate() Overrides FrameworkElement.OnApplyTemplate() | Edit this page View Source OnPendingConnectionCompleted(object, PendingConnectionEventArgs) Declaration protected virtual void OnPendingConnectionCompleted(object sender, PendingConnectionEventArgs e) Parameters Type Name Description object sender PendingConnectionEventArgs e | Edit this page View Source OnPendingConnectionDrag(object, PendingConnectionEventArgs) Declaration protected virtual void OnPendingConnectionDrag(object sender, PendingConnectionEventArgs e) Parameters Type Name Description object sender PendingConnectionEventArgs e | Edit this page View Source OnPendingConnectionStarted(object, PendingConnectionEventArgs) Declaration protected virtual void OnPendingConnectionStarted(object sender, PendingConnectionEventArgs e) Parameters Type Name Description object sender PendingConnectionEventArgs e | Edit this page View Source SetIsOverElement(UIElement, bool) Declaration public static void SetIsOverElement(UIElement elem, bool value) Parameters Type Name Description UIElement elem bool value"
  },
  "api/Nodify.PendingConnectionEventArgs.html": {
    "href": "api/Nodify.PendingConnectionEventArgs.html",
    "title": "Class PendingConnectionEventArgs | Nodify-Docs",
    "keywords": "Class PendingConnectionEventArgs Provides data for PendingConnection related routed events. Inheritance object EventArgs RoutedEventArgs PendingConnectionEventArgs Namespace: Nodify Assembly: Nodify.dll Syntax public class PendingConnectionEventArgs : RoutedEventArgs Constructors | Edit this page View Source PendingConnectionEventArgs(object) Initializes a new instance of the PendingConnectionEventArgs class using the specified SourceConnector. Declaration public PendingConnectionEventArgs(object sourceConnector) Parameters Type Name Description object sourceConnector The DataContext of a related Connector. Properties | Edit this page View Source Anchor Gets or sets the Anchor of the Connector that raised this event. Declaration public Point Anchor { get; set; } Property Value Type Description Point | Edit this page View Source Canceled Gets or sets a value that indicates whether this PendingConnection was cancelled. Declaration public bool Canceled { get; set; } Property Value Type Description bool | Edit this page View Source OffsetX Gets or sets the distance from the SourceConnector in the X axis. Declaration public double OffsetX { get; set; } Property Value Type Description double | Edit this page View Source OffsetY Gets or sets the distance from the SourceConnector in the Y axis. Declaration public double OffsetY { get; set; } Property Value Type Description double | Edit this page View Source SourceConnector Gets the DataContext of the Connector that started this PendingConnection. Declaration public object SourceConnector { get; } Property Value Type Description object | Edit this page View Source TargetConnector Gets or sets the DataContext of the target Connector when the PendingConnection is completed. Declaration public object? TargetConnector { get; set; } Property Value Type Description object Methods | Edit this page View Source InvokeEventHandler(Delegate, object) When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation. Declaration protected override void InvokeEventHandler(Delegate genericHandler, object genericTarget) Parameters Type Name Description Delegate genericHandler The generic handler / delegate implementation to be invoked. object genericTarget The target on which the provided handler should be invoked. Overrides RoutedEventArgs.InvokeEventHandler(Delegate, object)"
  },
  "api/Nodify.PendingConnectionEventHandler.html": {
    "href": "api/Nodify.PendingConnectionEventHandler.html",
    "title": "Delegate PendingConnectionEventHandler | Nodify-Docs",
    "keywords": "Delegate PendingConnectionEventHandler Represents the method that will handle PendingConnection related routed events. Namespace: Nodify Assembly: Nodify.dll Syntax public delegate void PendingConnectionEventHandler(object sender, PendingConnectionEventArgs e) Parameters Type Name Description object sender The object where the event handler is attached. PendingConnectionEventArgs e The event data."
  },
  "api/Nodify.PreviewLocationChanged.html": {
    "href": "api/Nodify.PreviewLocationChanged.html",
    "title": "Delegate PreviewLocationChanged | Nodify-Docs",
    "keywords": "Delegate PreviewLocationChanged Delegate used to notify when an ItemContainer is previewing a new location. Namespace: Nodify Assembly: Nodify.dll Syntax public delegate void PreviewLocationChanged(Point newLocation) Parameters Type Name Description Point newLocation The new location."
  },
  "api/Nodify.ResizeEventArgs.html": {
    "href": "api/Nodify.ResizeEventArgs.html",
    "title": "Class ResizeEventArgs | Nodify-Docs",
    "keywords": "Class ResizeEventArgs Provides data for resize related routed events. Inheritance object EventArgs RoutedEventArgs ResizeEventArgs Namespace: Nodify Assembly: Nodify.dll Syntax public class ResizeEventArgs : RoutedEventArgs Constructors | Edit this page View Source ResizeEventArgs(Size, Size) Initializes a new instance of the ResizeEventArgs class with the previous and the new Size. Declaration public ResizeEventArgs(Size previousSize, Size newSize) Parameters Type Name Description Size previousSize The previous size associated with this event. Size newSize The new size associated with this event. Properties | Edit this page View Source NewSize Gets the new size of the object. Declaration public Size NewSize { get; } Property Value Type Description Size | Edit this page View Source PreviousSize Gets the previous size of the object. Declaration public Size PreviousSize { get; } Property Value Type Description Size Methods | Edit this page View Source InvokeEventHandler(Delegate, object) When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation. Declaration protected override void InvokeEventHandler(Delegate genericHandler, object genericTarget) Parameters Type Name Description Delegate genericHandler The generic handler / delegate implementation to be invoked. object genericTarget The target on which the provided handler should be invoked. Overrides RoutedEventArgs.InvokeEventHandler(Delegate, object)"
  },
  "api/Nodify.ResizeEventHandler.html": {
    "href": "api/Nodify.ResizeEventHandler.html",
    "title": "Delegate ResizeEventHandler | Nodify-Docs",
    "keywords": "Delegate ResizeEventHandler Represents the method that will handle resize related routed events. Namespace: Nodify Assembly: Nodify.dll Syntax public delegate void ResizeEventHandler(object sender, ResizeEventArgs e) Parameters Type Name Description object sender The sender of this event. ResizeEventArgs e The event data."
  },
  "api/Nodify.SelectionHelper.SelectionType.html": {
    "href": "api/Nodify.SelectionHelper.SelectionType.html",
    "title": "Enum SelectionHelper.SelectionType | Nodify-Docs",
    "keywords": "Enum SelectionHelper.SelectionType Available selection logic. Namespace: Nodify Assembly: Nodify.dll Syntax public enum SelectionHelper.SelectionType Fields Name Description Append Adds items to the current selection. Invert Inverts the selection. Remove Removes items from existing selection. Replace Replaces the old selection."
  },
  "api/Nodify.SelectionHelper.html": {
    "href": "api/Nodify.SelectionHelper.html",
    "title": "Class SelectionHelper | Nodify-Docs",
    "keywords": "Class SelectionHelper Helps with selecting ItemContainers and updating the SelectedArea and IsSelecting properties. Inheritance object SelectionHelper Namespace: Nodify Assembly: Nodify.dll Syntax public sealed class SelectionHelper Constructors | Edit this page View Source SelectionHelper(NodifyEditor) Constructs a new instance of a SelectionHelper. Declaration public SelectionHelper(NodifyEditor host) Parameters Type Name Description NodifyEditor host The editor to select items from. Methods | Edit this page View Source Abort() Aborts the current selection. Declaration public void Abort() | Edit this page View Source End() Commits the current selection to the editor. Declaration public void End() | Edit this page View Source Start(Point, SelectionType) Attempts to start a new selection. Declaration public void Start(Point location, SelectionHelper.SelectionType selectionType) Parameters Type Name Description Point location The location inside the graph. SelectionHelper.SelectionType selectionType The type of selection. Remarks Will not do anything if selection is in progress. | Edit this page View Source Update(Point) Update the end location for the selection. Declaration public void Update(Point endLocation) Parameters Type Name Description Point endLocation An absolute location."
  },
  "api/Nodify.StateNode.html": {
    "href": "api/Nodify.StateNode.html",
    "title": "Class StateNode | Nodify-Docs",
    "keywords": "Class StateNode Represents a control that acts as a Connector. Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control Connector StateNode Inherited Members Connector.ElementConnector Connector.PendingConnectionStartedEvent Connector.PendingConnectionCompletedEvent Connector.PendingConnectionDragEvent Connector.DisconnectEvent Connector.PendingConnectionStarted Connector.PendingConnectionCompleted Connector.PendingConnectionDrag Connector.Disconnect Connector.AnchorProperty Connector.IsConnectedProperty Connector.DisconnectCommandProperty Connector.IsPendingConnectionProperty Connector.Anchor Connector.IsConnected Connector.IsPendingConnection Connector.DisconnectCommand Connector.Thumb Connector.Container Connector.Editor Connector.OptimizeSafeZone Connector.OptimizeMinimumSelectedItems Connector.EnableOptimizations Connector.AllowPendingConnectionCancellation Connector.EnableStickyConnections Connector.OnRenderSizeChanged(SizeChangedInfo) Connector.UpdateAnchorOptimized(Point) Connector.UpdateAnchor(Point) Connector.UpdateAnchor() Connector.OnLostMouseCapture(MouseEventArgs) Connector.OnKeyUp(KeyEventArgs) Connector.OnMouseMove(MouseEventArgs) Connector.OnConnectorDrag(Vector) Connector.OnConnectorDragStarted() Connector.OnConnectorDragCompleted(bool) Connector.OnDisconnect() Namespace: Nodify Assembly: Nodify.dll Syntax [TemplatePart(Name = \"PART_Content\", Type = typeof(UIElement))] public class StateNode : Connector Fields | Edit this page View Source ContentProperty Declaration public static readonly DependencyProperty ContentProperty Field Value Type Description DependencyProperty | Edit this page View Source ContentTemplateProperty Declaration public static readonly DependencyProperty ContentTemplateProperty Field Value Type Description DependencyProperty | Edit this page View Source CornerRadiusProperty Declaration public static readonly DependencyProperty CornerRadiusProperty Field Value Type Description DependencyProperty | Edit this page View Source ElementContent Declaration protected const string ElementContent = \"PART_Content\" Field Value Type Description string | Edit this page View Source HighlightBrushProperty Declaration public static readonly DependencyProperty HighlightBrushProperty Field Value Type Description DependencyProperty Properties | Edit this page View Source Content Gets or sets the data for the control's content. Declaration public object Content { get; set; } Property Value Type Description object | Edit this page View Source ContentControl Gets the ContentControl control of this StateNode. Declaration protected UIElement? ContentControl { get; } Property Value Type Description UIElement | Edit this page View Source ContentTemplate Gets or sets the template used to display the content of the control's header. Declaration public DataTemplate ContentTemplate { get; set; } Property Value Type Description DataTemplate | Edit this page View Source CornerRadius Gets or sets a value that represents the degree to which the corners of the StateNode are rounded. Declaration public CornerRadius CornerRadius { get; set; } Property Value Type Description CornerRadius | Edit this page View Source HighlightBrush Gets or sets the brush used when the IsOverElementProperty attached property is true for this StateNode. Declaration public Brush HighlightBrush { get; set; } Property Value Type Description Brush Methods | Edit this page View Source OnApplyTemplate() When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate(). Declaration public override void OnApplyTemplate() Overrides Connector.OnApplyTemplate() | Edit this page View Source OnMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state. Overrides Connector.OnMouseDown(MouseButtonEventArgs) | Edit this page View Source OnMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. Declaration protected override void OnMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released. Overrides Connector.OnMouseUp(MouseButtonEventArgs)"
  },
  "api/Nodify.html": {
    "href": "api/Nodify.html",
    "title": "Namespace Nodify | Nodify-Docs",
    "keywords": "Namespace Nodify Classes AllGestures All gestures must match. AnyGesture At least one gesture must match. BaseConnection Represents the base class for shapes that are drawn from a Source point to a Target point. BoxValue CircuitConnection Represents a line that is controlled by an angle. Connection Represents a cubic bezier curve. ConnectionEventArgs Provides data for BaseConnection related routed events. Connector Represents a connector control that can start and complete a PendingConnection. Has a ElementConnector that the Anchor is calculated from for the PendingConnection. Center of this control is used if missing. ConnectorEventArgs Provides data for Connector related routed events. ContainerDefaultState The default state of the ItemContainer. ContainerDraggingState Dragging state of the container. ContainerState The base class for container states. DecoratorContainer The container for all the items generated from the Decorators collection. EditorCommands EditorDefaultState The default state of the editor. Default State - mouse left down -> Selecting State - mouse right down -> Panning State Selecting State - mouse left up -> Default State - mouse right down -> Panning State Panning State - mouse right up -> previous state (Selecting State or Default State) - mouse left up -> Panning State EditorGestures Gestures used by built-in controls inside the NodifyEditor. EditorGestures.ConnectionGestures Gestures used by the BaseConnection. EditorGestures.ConnectorGestures Gestures used by the Connector. EditorGestures.GroupingNodeGestures Gestures for the GroupingNode. EditorGestures.ItemContainerGestures Gestures for the item containers. EditorGestures.NodifyEditorGestures Gestures for the editor. EditorGestures.SelectionGestures Gestures for the selection. EditorPanningState The panning state of the editor. EditorSelectingState The selecting state of the editor. EditorState The base class for editor states. GroupingNode Defines a panel with a header that groups ItemContainers inside it and can be resized. InputGestureRef An input gesture that allows changing its logic at runtime without changing its reference. Useful for classes that capture the object reference without the posibility of updating it. (e.g. EditorCommands) ItemContainer The container for all the items generated by the ItemsSource of the NodifyEditor. KnotNode Represents a control that owns a Connector. LineConnection Represents a line that has an arrow indicating its Direction. MultiGesture Combines multiple input gestures. Node Represents a control that has a list of InputConnectors and a list of OutputConnectors. NodeInput Represents the default control for the InputConnectorTemplate. NodeOutput Represents the default control for the OutputConnectorTemplate. NodifyCanvas A canvas like panel that works with INodifyCanvasItems. NodifyEditor Groups ItemContainers and Connections in an area that you can drag, zoom and select. PendingConnection Represents a pending connection usually started by a Connector which invokes the CompletedCommand when completed. PendingConnectionEventArgs Provides data for PendingConnection related routed events. ResizeEventArgs Provides data for resize related routed events. SelectionHelper Helps with selecting ItemContainers and updating the SelectedArea and IsSelecting properties. StateNode Represents a control that acts as a Connector. Interfaces INodifyCanvasItem Interface for items inside a NodifyCanvas. Enums ArrowHeadEnds The end at which the arrow head is drawn. ArrowHeadShape The shape of the arrowhead. ConnectionDirection The direction in which a connection is oriented. ConnectionOffsetMode Specifies the offset type that can be applied to a BaseConnection using the SourceOffset and the TargetOffset values. EditorCommands.Alignment Specifies the possible alignment values used by the Align command. GroupingMovementMode Specifies the possible movement modes of a GroupingNode. MultiGesture.Match The strategy used by Matches(object, InputEventArgs). SelectionHelper.SelectionType Available selection logic. Delegates ConnectionEventHandler Represents the method that will handle BaseConnection related routed events. ConnectorEventHandler Represents the method that will handle Connector related routed events. PendingConnectionEventHandler Represents the method that will handle PendingConnection related routed events. PreviewLocationChanged Delegate used to notify when an ItemContainer is previewing a new location. ResizeEventHandler Represents the method that will handle resize related routed events."
  }
}