### YamlMime:ManagedReference
items:
- uid: Nodify.ContainerState
  commentId: T:Nodify.ContainerState
  id: ContainerState
  parent: Nodify
  children:
  - Nodify.ContainerState.#ctor(Nodify.ItemContainer)
  - Nodify.ContainerState.Container
  - Nodify.ContainerState.Editor
  - Nodify.ContainerState.Enter(Nodify.ContainerState)
  - Nodify.ContainerState.Exit
  - Nodify.ContainerState.HandleKeyDown(System.Windows.Input.KeyEventArgs)
  - Nodify.ContainerState.HandleKeyUp(System.Windows.Input.KeyEventArgs)
  - Nodify.ContainerState.HandleMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - Nodify.ContainerState.HandleMouseMove(System.Windows.Input.MouseEventArgs)
  - Nodify.ContainerState.HandleMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - Nodify.ContainerState.HandleMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - Nodify.ContainerState.PopState
  - Nodify.ContainerState.PushState(Nodify.ContainerState)
  - Nodify.ContainerState.ReEnter(Nodify.ContainerState)
  langs:
  - csharp
  - vb
  name: ContainerState
  nameWithType: ContainerState
  fullName: Nodify.ContainerState
  type: Class
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: ContainerState
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 5
  assemblies:
  - Nodify
  namespace: Nodify
  summary: The base class for container states.
  example: []
  syntax:
    content: public abstract class ContainerState
    content.vb: Public MustInherit Class ContainerState
  inheritance:
  - System.Object
  derivedClasses:
  - Nodify.ContainerDefaultState
  - Nodify.ContainerDraggingState
- uid: Nodify.ContainerState.#ctor(Nodify.ItemContainer)
  commentId: M:Nodify.ContainerState.#ctor(Nodify.ItemContainer)
  id: '#ctor(Nodify.ItemContainer)'
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: ContainerState(ItemContainer)
  nameWithType: ContainerState.ContainerState(ItemContainer)
  fullName: Nodify.ContainerState.ContainerState(Nodify.ItemContainer)
  type: Constructor
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: .ctor
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 9
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Constructs a new <xref href="Nodify.ContainerState" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ContainerState(ItemContainer container)
    parameters:
    - id: container
      type: Nodify.ItemContainer
      description: The owner of the state.
    content.vb: Public Sub New(container As ItemContainer)
  overload: Nodify.ContainerState.#ctor*
  nameWithType.vb: ContainerState.New(ItemContainer)
  fullName.vb: Nodify.ContainerState.New(Nodify.ItemContainer)
  name.vb: New(ItemContainer)
- uid: Nodify.ContainerState.Container
  commentId: P:Nodify.ContainerState.Container
  id: Container
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: ContainerState.Container
  fullName: Nodify.ContainerState.Container
  type: Property
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: Container
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 15
  assemblies:
  - Nodify
  namespace: Nodify
  summary: The owner of the state.
  example: []
  syntax:
    content: protected ItemContainer Container { get; }
    parameters: []
    return:
      type: Nodify.ItemContainer
    content.vb: Protected ReadOnly Property Container As ItemContainer
  overload: Nodify.ContainerState.Container*
- uid: Nodify.ContainerState.Editor
  commentId: P:Nodify.ContainerState.Editor
  id: Editor
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: Editor
  nameWithType: ContainerState.Editor
  fullName: Nodify.ContainerState.Editor
  type: Property
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: Editor
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 18
  assemblies:
  - Nodify
  namespace: Nodify
  summary: The owner of the state.
  example: []
  syntax:
    content: protected NodifyEditor Editor { get; }
    parameters: []
    return:
      type: Nodify.NodifyEditor
    content.vb: Protected ReadOnly Property Editor As NodifyEditor
  overload: Nodify.ContainerState.Editor*
- uid: Nodify.ContainerState.HandleMouseDown(System.Windows.Input.MouseButtonEventArgs)
  commentId: M:Nodify.ContainerState.HandleMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: HandleMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: HandleMouseDown(MouseButtonEventArgs)
  nameWithType: ContainerState.HandleMouseDown(MouseButtonEventArgs)
  fullName: Nodify.ContainerState.HandleMouseDown(System.Windows.Input.MouseButtonEventArgs)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: HandleMouseDown
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 21
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Invoked when an unhandled <xref href="System.Windows.Input.Mouse.MouseDown" data-throw-if-not-resolved="false"></xref> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
  example: []
  syntax:
    content: public virtual void HandleMouseDown(MouseButtonEventArgs e)
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: The <xref href="System.Windows.Input.MouseButtonEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data. This event data reports details about the mouse button that was pressed and the handled state.
    content.vb: Public Overridable Sub HandleMouseDown(e As MouseButtonEventArgs)
  overload: Nodify.ContainerState.HandleMouseDown*
- uid: Nodify.ContainerState.HandleMouseUp(System.Windows.Input.MouseButtonEventArgs)
  commentId: M:Nodify.ContainerState.HandleMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: HandleMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: HandleMouseUp(MouseButtonEventArgs)
  nameWithType: ContainerState.HandleMouseUp(MouseButtonEventArgs)
  fullName: Nodify.ContainerState.HandleMouseUp(System.Windows.Input.MouseButtonEventArgs)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: HandleMouseUp
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 24
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Invoked when an unhandled <xref href="System.Windows.Input.Mouse.MouseDown" data-throw-if-not-resolved="false"></xref> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
  example: []
  syntax:
    content: public virtual void HandleMouseUp(MouseButtonEventArgs e)
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: The <xref href="System.Windows.Input.MouseButtonEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data. This event data reports details about the mouse button that was pressed and the handled state.
    content.vb: Public Overridable Sub HandleMouseUp(e As MouseButtonEventArgs)
  overload: Nodify.ContainerState.HandleMouseUp*
- uid: Nodify.ContainerState.HandleMouseMove(System.Windows.Input.MouseEventArgs)
  commentId: M:Nodify.ContainerState.HandleMouseMove(System.Windows.Input.MouseEventArgs)
  id: HandleMouseMove(System.Windows.Input.MouseEventArgs)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: HandleMouseMove(MouseEventArgs)
  nameWithType: ContainerState.HandleMouseMove(MouseEventArgs)
  fullName: Nodify.ContainerState.HandleMouseMove(System.Windows.Input.MouseEventArgs)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: HandleMouseMove
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 27
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Invoked when an unhandled <xref href="System.Windows.Input.Mouse.MouseMove" data-throw-if-not-resolved="false"></xref> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
  example: []
  syntax:
    content: public virtual void HandleMouseMove(MouseEventArgs e)
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: The <xref href="System.Windows.Input.MouseEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data.
    content.vb: Public Overridable Sub HandleMouseMove(e As MouseEventArgs)
  overload: Nodify.ContainerState.HandleMouseMove*
- uid: Nodify.ContainerState.HandleMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  commentId: M:Nodify.ContainerState.HandleMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: HandleMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: HandleMouseWheel(MouseWheelEventArgs)
  nameWithType: ContainerState.HandleMouseWheel(MouseWheelEventArgs)
  fullName: Nodify.ContainerState.HandleMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: HandleMouseWheel
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 30
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Invoked when an unhandled <xref href="System.Windows.Input.Mouse.MouseWheel" data-throw-if-not-resolved="false"></xref> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
  example: []
  syntax:
    content: public virtual void HandleMouseWheel(MouseWheelEventArgs e)
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: The <xref href="System.Windows.Input.MouseWheelEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data.
    content.vb: Public Overridable Sub HandleMouseWheel(e As MouseWheelEventArgs)
  overload: Nodify.ContainerState.HandleMouseWheel*
- uid: Nodify.ContainerState.HandleKeyUp(System.Windows.Input.KeyEventArgs)
  commentId: M:Nodify.ContainerState.HandleKeyUp(System.Windows.Input.KeyEventArgs)
  id: HandleKeyUp(System.Windows.Input.KeyEventArgs)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: HandleKeyUp(KeyEventArgs)
  nameWithType: ContainerState.HandleKeyUp(KeyEventArgs)
  fullName: Nodify.ContainerState.HandleKeyUp(System.Windows.Input.KeyEventArgs)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: HandleKeyUp
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 33
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Invoked when an unhandled <xref href="System.Windows.Input.Keyboard.KeyUp" data-throw-if-not-resolved="false"></xref> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
  example: []
  syntax:
    content: public virtual void HandleKeyUp(KeyEventArgs e)
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: The <xref href="System.Windows.Input.KeyEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data.
    content.vb: Public Overridable Sub HandleKeyUp(e As KeyEventArgs)
  overload: Nodify.ContainerState.HandleKeyUp*
- uid: Nodify.ContainerState.HandleKeyDown(System.Windows.Input.KeyEventArgs)
  commentId: M:Nodify.ContainerState.HandleKeyDown(System.Windows.Input.KeyEventArgs)
  id: HandleKeyDown(System.Windows.Input.KeyEventArgs)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: HandleKeyDown(KeyEventArgs)
  nameWithType: ContainerState.HandleKeyDown(KeyEventArgs)
  fullName: Nodify.ContainerState.HandleKeyDown(System.Windows.Input.KeyEventArgs)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: HandleKeyDown
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 36
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Invoked when an unhandled <xref href="System.Windows.Input.Keyboard.KeyDown" data-throw-if-not-resolved="false"></xref> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
  example: []
  syntax:
    content: public virtual void HandleKeyDown(KeyEventArgs e)
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: The <xref href="System.Windows.Input.KeyEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data.
    content.vb: Public Overridable Sub HandleKeyDown(e As KeyEventArgs)
  overload: Nodify.ContainerState.HandleKeyDown*
- uid: Nodify.ContainerState.Enter(Nodify.ContainerState)
  commentId: M:Nodify.ContainerState.Enter(Nodify.ContainerState)
  id: Enter(Nodify.ContainerState)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: Enter(ContainerState?)
  nameWithType: ContainerState.Enter(ContainerState?)
  fullName: Nodify.ContainerState.Enter(Nodify.ContainerState?)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: Enter
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 40
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Called when <xref href="Nodify.ItemContainer.PushState(Nodify.ContainerState)" data-throw-if-not-resolved="false"></xref> or <xref href="Nodify.ItemContainer.PopState" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public virtual void Enter(ContainerState? from)
    parameters:
    - id: from
      type: Nodify.ContainerState
      description: The state we enter from (is null for root state).
    content.vb: Public Overridable Sub Enter(from As ContainerState)
  overload: Nodify.ContainerState.Enter*
  nameWithType.vb: ContainerState.Enter(ContainerState)
  fullName.vb: Nodify.ContainerState.Enter(Nodify.ContainerState)
  name.vb: Enter(ContainerState)
- uid: Nodify.ContainerState.Exit
  commentId: M:Nodify.ContainerState.Exit
  id: Exit
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: Exit()
  nameWithType: ContainerState.Exit()
  fullName: Nodify.ContainerState.Exit()
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: Exit
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 43
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Called when <xref href="Nodify.ItemContainer.PopState" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public virtual void Exit()
    content.vb: Public Overridable Sub [Exit]()
  overload: Nodify.ContainerState.Exit*
- uid: Nodify.ContainerState.ReEnter(Nodify.ContainerState)
  commentId: M:Nodify.ContainerState.ReEnter(Nodify.ContainerState)
  id: ReEnter(Nodify.ContainerState)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: ReEnter(ContainerState)
  nameWithType: ContainerState.ReEnter(ContainerState)
  fullName: Nodify.ContainerState.ReEnter(Nodify.ContainerState)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: ReEnter
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 47
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Called when <xref href="Nodify.ItemContainer.PopState" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public virtual void ReEnter(ContainerState from)
    parameters:
    - id: from
      type: Nodify.ContainerState
      description: The state we re-enter from.
    content.vb: Public Overridable Sub ReEnter(from As ContainerState)
  overload: Nodify.ContainerState.ReEnter*
- uid: Nodify.ContainerState.PushState(Nodify.ContainerState)
  commentId: M:Nodify.ContainerState.PushState(Nodify.ContainerState)
  id: PushState(Nodify.ContainerState)
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: PushState(ContainerState)
  nameWithType: ContainerState.PushState(ContainerState)
  fullName: Nodify.ContainerState.PushState(Nodify.ContainerState)
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: PushState
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 51
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Pushes a new state into the stack.
  example: []
  syntax:
    content: public virtual void PushState(ContainerState newState)
    parameters:
    - id: newState
      type: Nodify.ContainerState
      description: The new state.
    content.vb: Public Overridable Sub PushState(newState As ContainerState)
  overload: Nodify.ContainerState.PushState*
- uid: Nodify.ContainerState.PopState
  commentId: M:Nodify.ContainerState.PopState
  id: PopState
  parent: Nodify.ContainerState
  langs:
  - csharp
  - vb
  name: PopState()
  nameWithType: ContainerState.PopState()
  fullName: Nodify.ContainerState.PopState()
  type: Method
  source:
    remote:
      path: Nodify/EditorStates/ContainerState.cs
      branch: auto-docs
      repo: git@github.com:MRfantastic3DGamer/nodify.git
    id: PopState
    path: Nodify/EditorStates/ContainerState.cs
    startLine: 54
  assemblies:
  - Nodify
  namespace: Nodify
  summary: Pops the current state from the stack.
  example: []
  syntax:
    content: public virtual void PopState()
    content.vb: Public Overridable Sub PopState()
  overload: Nodify.ContainerState.PopState*
references:
- uid: Nodify
  commentId: N:Nodify
  href: Nodify.html
  name: Nodify
  nameWithType: Nodify
  fullName: Nodify
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Nodify.ContainerState
  commentId: T:Nodify.ContainerState
  parent: Nodify
  href: Nodify.ContainerState.html
  name: ContainerState
  nameWithType: ContainerState
  fullName: Nodify.ContainerState
- uid: Nodify.ContainerState.#ctor*
  commentId: Overload:Nodify.ContainerState.#ctor
  href: Nodify.ContainerState.html#Nodify_ContainerState__ctor_Nodify_ItemContainer_
  name: ContainerState
  nameWithType: ContainerState.ContainerState
  fullName: Nodify.ContainerState.ContainerState
  nameWithType.vb: ContainerState.New
  fullName.vb: Nodify.ContainerState.New
  name.vb: New
- uid: Nodify.ItemContainer
  commentId: T:Nodify.ItemContainer
  parent: Nodify
  href: Nodify.ItemContainer.html
  name: ItemContainer
  nameWithType: ItemContainer
  fullName: Nodify.ItemContainer
- uid: Nodify.ContainerState.Container*
  commentId: Overload:Nodify.ContainerState.Container
  href: Nodify.ContainerState.html#Nodify_ContainerState_Container
  name: Container
  nameWithType: ContainerState.Container
  fullName: Nodify.ContainerState.Container
- uid: Nodify.ContainerState.Editor*
  commentId: Overload:Nodify.ContainerState.Editor
  href: Nodify.ContainerState.html#Nodify_ContainerState_Editor
  name: Editor
  nameWithType: ContainerState.Editor
  fullName: Nodify.ContainerState.Editor
- uid: Nodify.NodifyEditor
  commentId: T:Nodify.NodifyEditor
  parent: Nodify
  href: Nodify.NodifyEditor.html
  name: NodifyEditor
  nameWithType: NodifyEditor
  fullName: Nodify.NodifyEditor
- uid: System.Windows.Input.Mouse.MouseDown
  commentId: E:System.Windows.Input.Mouse.MouseDown
  isExternal: true
- uid: System.Windows.Input.MouseButtonEventArgs
  commentId: T:System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.mousebuttoneventargs
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: Nodify.ContainerState.HandleMouseDown*
  commentId: Overload:Nodify.ContainerState.HandleMouseDown
  href: Nodify.ContainerState.html#Nodify_ContainerState_HandleMouseDown_System_Windows_Input_MouseButtonEventArgs_
  name: HandleMouseDown
  nameWithType: ContainerState.HandleMouseDown
  fullName: Nodify.ContainerState.HandleMouseDown
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
- uid: Nodify.ContainerState.HandleMouseUp*
  commentId: Overload:Nodify.ContainerState.HandleMouseUp
  href: Nodify.ContainerState.html#Nodify_ContainerState_HandleMouseUp_System_Windows_Input_MouseButtonEventArgs_
  name: HandleMouseUp
  nameWithType: ContainerState.HandleMouseUp
  fullName: Nodify.ContainerState.HandleMouseUp
- uid: System.Windows.Input.Mouse.MouseMove
  commentId: E:System.Windows.Input.Mouse.MouseMove
  isExternal: true
- uid: System.Windows.Input.MouseEventArgs
  commentId: T:System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.mouseeventargs
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: Nodify.ContainerState.HandleMouseMove*
  commentId: Overload:Nodify.ContainerState.HandleMouseMove
  href: Nodify.ContainerState.html#Nodify_ContainerState_HandleMouseMove_System_Windows_Input_MouseEventArgs_
  name: HandleMouseMove
  nameWithType: ContainerState.HandleMouseMove
  fullName: Nodify.ContainerState.HandleMouseMove
- uid: System.Windows.Input.Mouse.MouseWheel
  commentId: E:System.Windows.Input.Mouse.MouseWheel
  isExternal: true
- uid: System.Windows.Input.MouseWheelEventArgs
  commentId: T:System.Windows.Input.MouseWheelEventArgs
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.mousewheeleventargs
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs
  fullName: System.Windows.Input.MouseWheelEventArgs
- uid: Nodify.ContainerState.HandleMouseWheel*
  commentId: Overload:Nodify.ContainerState.HandleMouseWheel
  href: Nodify.ContainerState.html#Nodify_ContainerState_HandleMouseWheel_System_Windows_Input_MouseWheelEventArgs_
  name: HandleMouseWheel
  nameWithType: ContainerState.HandleMouseWheel
  fullName: Nodify.ContainerState.HandleMouseWheel
- uid: System.Windows.Input.Keyboard.KeyUp
  commentId: E:System.Windows.Input.Keyboard.KeyUp
  isExternal: true
- uid: System.Windows.Input.KeyEventArgs
  commentId: T:System.Windows.Input.KeyEventArgs
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.keyeventargs
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
- uid: Nodify.ContainerState.HandleKeyUp*
  commentId: Overload:Nodify.ContainerState.HandleKeyUp
  href: Nodify.ContainerState.html#Nodify_ContainerState_HandleKeyUp_System_Windows_Input_KeyEventArgs_
  name: HandleKeyUp
  nameWithType: ContainerState.HandleKeyUp
  fullName: Nodify.ContainerState.HandleKeyUp
- uid: System.Windows.Input.Keyboard.KeyDown
  commentId: E:System.Windows.Input.Keyboard.KeyDown
  isExternal: true
- uid: Nodify.ContainerState.HandleKeyDown*
  commentId: Overload:Nodify.ContainerState.HandleKeyDown
  href: Nodify.ContainerState.html#Nodify_ContainerState_HandleKeyDown_System_Windows_Input_KeyEventArgs_
  name: HandleKeyDown
  nameWithType: ContainerState.HandleKeyDown
  fullName: Nodify.ContainerState.HandleKeyDown
- uid: Nodify.ItemContainer.PushState(Nodify.ContainerState)
  commentId: M:Nodify.ItemContainer.PushState(Nodify.ContainerState)
  href: Nodify.ItemContainer.html#Nodify_ItemContainer_PushState_Nodify_ContainerState_
  name: PushState(ContainerState)
  nameWithType: ItemContainer.PushState(ContainerState)
  fullName: Nodify.ItemContainer.PushState(Nodify.ContainerState)
  spec.csharp:
  - uid: Nodify.ItemContainer.PushState(Nodify.ContainerState)
    name: PushState
    href: Nodify.ItemContainer.html#Nodify_ItemContainer_PushState_Nodify_ContainerState_
  - name: (
  - uid: Nodify.ContainerState
    name: ContainerState
    href: Nodify.ContainerState.html
  - name: )
  spec.vb:
  - uid: Nodify.ItemContainer.PushState(Nodify.ContainerState)
    name: PushState
    href: Nodify.ItemContainer.html#Nodify_ItemContainer_PushState_Nodify_ContainerState_
  - name: (
  - uid: Nodify.ContainerState
    name: ContainerState
    href: Nodify.ContainerState.html
  - name: )
- uid: Nodify.ItemContainer.PopState
  commentId: M:Nodify.ItemContainer.PopState
  href: Nodify.ItemContainer.html#Nodify_ItemContainer_PopState
  name: PopState()
  nameWithType: ItemContainer.PopState()
  fullName: Nodify.ItemContainer.PopState()
  spec.csharp:
  - uid: Nodify.ItemContainer.PopState
    name: PopState
    href: Nodify.ItemContainer.html#Nodify_ItemContainer_PopState
  - name: (
  - name: )
  spec.vb:
  - uid: Nodify.ItemContainer.PopState
    name: PopState
    href: Nodify.ItemContainer.html#Nodify_ItemContainer_PopState
  - name: (
  - name: )
- uid: Nodify.ContainerState.Enter*
  commentId: Overload:Nodify.ContainerState.Enter
  href: Nodify.ContainerState.html#Nodify_ContainerState_Enter_Nodify_ContainerState_
  name: Enter
  nameWithType: ContainerState.Enter
  fullName: Nodify.ContainerState.Enter
- uid: Nodify.ContainerState.Exit*
  commentId: Overload:Nodify.ContainerState.Exit
  href: Nodify.ContainerState.html#Nodify_ContainerState_Exit
  name: Exit
  nameWithType: ContainerState.Exit
  fullName: Nodify.ContainerState.Exit
- uid: Nodify.ContainerState.ReEnter*
  commentId: Overload:Nodify.ContainerState.ReEnter
  href: Nodify.ContainerState.html#Nodify_ContainerState_ReEnter_Nodify_ContainerState_
  name: ReEnter
  nameWithType: ContainerState.ReEnter
  fullName: Nodify.ContainerState.ReEnter
- uid: Nodify.ContainerState.PushState*
  commentId: Overload:Nodify.ContainerState.PushState
  href: Nodify.ContainerState.html#Nodify_ContainerState_PushState_Nodify_ContainerState_
  name: PushState
  nameWithType: ContainerState.PushState
  fullName: Nodify.ContainerState.PushState
- uid: Nodify.ContainerState.PopState*
  commentId: Overload:Nodify.ContainerState.PopState
  href: Nodify.ContainerState.html#Nodify_ContainerState_PopState
  name: PopState
  nameWithType: ContainerState.PopState
  fullName: Nodify.ContainerState.PopState
